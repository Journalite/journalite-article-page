/* ULTIMATE FIX: Force ProseMirror to work correctly regardless of global styles */
.editorContainer :global(.ProseMirror),
.editorContainer :global(.ProseMirror *),
.editorContent,
.prosemirrorEditor,
.editor :global(.ProseMirror),
.editor :global(.ProseMirror *) {
  /* FORCE proper layout */
  display: block !important;
  width: auto !important;
  height: auto !important;
  
  /* PREVENT single-line forcing */
  white-space: pre-wrap !important;
  overflow: visible !important;
  flex: none !important;
  
  /* ENSURE text wrapping */
  word-wrap: break-word !important;
  word-break: normal !important;
  
  /* RESET any problematic positioning */
  position: static !important;
  float: none !important;
  transform: none !important;
}

/* Special fix for the actual contenteditable area */
.editorContainer :global(.ProseMirror[contenteditable="true"]) {
  display: block !important;
  white-space: pre-wrap !important;
  word-wrap: break-word !important;
  overflow: visible !important;
  cursor: text !important;
  caret-color: #292929 !important;
}

/* CRITICAL ProseMirror CSS Reset - Prevent interference from global styles */
.editor :global(.ProseMirror *) {
  white-space: inherit !important;
  direction: inherit !important;
  unicode-bidi: inherit !important;
}

/* CRITICAL: Ensure ProseMirror itself has correct text flow and layout */
.editor :global(.ProseMirror) {
  /* Force proper block layout to prevent single-line issues */
  display: block !important;
  width: 100% !important;
  height: auto !important;
  
  /* Prevent single-line forcing */
  white-space: pre-wrap !important;
  word-wrap: break-word !important;
  overflow: visible !important;
  overflow-x: visible !important;
  overflow-y: visible !important;
  
  /* Reset any flex that could force single line */
  flex: none !important;
  flex-wrap: wrap !important;
  flex-direction: column !important;
  
  /* Essential editor behavior */
  outline: none !important;
  cursor: text !important;
  position: relative !important;
  unicode-bidi: plaintext !important;
  direction: ltr !important;
  text-align: start !important;
  font-family: inherit !important;
  line-height: inherit !important;
  
  /* Ensure caret positioning works */
  caret-color: #292929 !important;
}

/* Main editor container */
.editor {
  /* CRITICAL: Ensure container doesn't force single line */
  display: block !important;
  width: 100%;
  max-width: 800px;
  margin: 0 auto;
  
  /* Prevent any layout issues */
  overflow: visible !important;
  height: auto !important;
  
  /* Typography */
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  color: #292929;
}

/* Loading state */
.loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  color: #6b7280;
  gap: 16px;
  font-size: 15px;
}

.loadingSpinner {
  width: 24px;
  height: 24px;
  border: 2px solid rgba(99, 102, 241, 0.2);
  border-top-color: #6366f1;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Modern floating toolbar */
.modernToolbar {
  position: fixed;
  top: 20px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1000;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  pointer-events: none;
}

.editor:focus-within .modernToolbar,
.modernToolbar:hover {
  opacity: 1;
  visibility: visible;
  pointer-events: all;
}

.toolbarContainer {
  display: flex;
  align-items: center;
  gap: 4px;
  padding: 8px 16px;
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(20px);
  border: 1px solid rgba(0, 0, 0, 0.08);
  border-radius: 12px;
  box-shadow: 
    0 4px 20px rgba(0, 0, 0, 0.1),
    0 1px 3px rgba(0, 0, 0, 0.05);
  max-width: 90vw;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

/* Format groups */
.formatGroup {
  display: flex;
  align-items: center;
  gap: 2px;
}

/* Dividers */
.divider {
  width: 1px;
  height: 24px;
  background: rgba(0, 0, 0, 0.1);
  margin: 0 6px;
  flex-shrink: 0;
}

/* Tool buttons */
.toolBtn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  border: none;
  border-radius: 8px;
  background: transparent;
  color: #374151;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  flex-shrink: 0;
}

.toolBtn:hover {
  background: rgba(99, 102, 241, 0.1);
  color: #6366f1;
  transform: scale(1.05);
}

.toolBtn:active {
  transform: scale(0.95);
}

.toolBtn.active {
  background: linear-gradient(135deg, #6366f1, #8b5cf6);
  color: white;
  box-shadow: 0 2px 8px rgba(99, 102, 241, 0.3);
}

.toolBtn.active:hover {
  background: linear-gradient(135deg, #5b5bd6, #7c3aed);
  transform: scale(1.05);
}

/* Heading icons */
.headingIcon {
  font-size: 12px;
  font-weight: 700;
  letter-spacing: -0.02em;
}

/* SVG icons in buttons */
.toolBtn svg {
  transition: transform 0.2s ease;
}

.toolBtn:hover svg {
  transform: scale(1.1);
}

.toolBtn.active svg {
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.2));
}

/* Editor content area */
.editorContent {
  min-height: 400px;
  padding: 12px 0;
  line-height: 1.6;
  outline: none;
  font-size: 21px;
  color: #292929;
}

/* Combined ProseMirror and editorContent styling */
.editorContent.ProseMirror,
.editor :global(.ProseMirror).editorContent {
  /* CRITICAL: Force proper display and layout */
  display: block !important;
  width: 100% !important;
  height: auto !important;
  
  /* CRITICAL: Prevent single-line forcing */
  white-space: pre-wrap !important;
  word-wrap: break-word !important;
  overflow: visible !important;
  overflow-x: visible !important;
  overflow-y: visible !important;
  
  /* CRITICAL: Reset any flex that might force single line */
  flex: none !important;
  flex-wrap: wrap !important;
  flex-direction: column !important;
  
  /* Essential cursor and editing behavior */
  -webkit-user-modify: read-write-plaintext-only !important;
  outline: none !important;
  cursor: text !important;
  position: relative !important;
  
  /* Ensure proper text flow and caret visibility */
  unicode-bidi: plaintext !important;
  direction: ltr !important;
  text-align: start !important;
  
  /* Ensure caret is visible and in front of text */
  caret-color: #292929 !important;
  
  /* Reset any conflicting styles */
  transform: none !important;
  text-indent: 0 !important;
  letter-spacing: normal !important;
  
  /* Prevent cursor jumping issues */
  word-break: normal !important;
  overflow-wrap: break-word !important;
  hyphens: none !important;
  
  /* Ensure stable layout */
  -webkit-text-size-adjust: 100% !important;
  text-size-adjust: 100% !important;
  
  /* Medium-like styling */
  min-height: 400px;
  padding: 12px 0;
  line-height: 1.6;
  font-size: 21px;
  color: #292929;
  font-family: inherit;
}

/* ProseMirror-specific styling */
.prosemirrorEditor {
  /* CRITICAL: Force proper block display */
  display: block !important;
  width: 100% !important;
  height: auto !important;
  
  /* CRITICAL: Prevent single-line forcing */
  white-space: pre-wrap !important;
  word-wrap: break-word !important;
  overflow: visible !important;
  overflow-x: visible !important;
  overflow-y: visible !important;
  
  /* CRITICAL: Reset flex properties */
  flex: none !important;
  flex-wrap: wrap !important;
  flex-direction: column !important;
  
  /* Essential editor behavior */
  outline: none !important;
  line-height: 1.6;
  font-size: 21px;
  color: #292929;
  cursor: text !important;
  position: relative !important;
  unicode-bidi: plaintext !important;
  direction: ltr !important;
  caret-color: #292929 !important;
}

/* Placeholder styling */
.prosemirrorEditor[data-placeholder]:empty::before {
  content: attr(data-placeholder);
  color: #999;
  position: absolute;
  pointer-events: none;
  font-style: italic;
}

/* ProseMirror content styling */
.prosemirrorEditor h1 {
  font-size: 32px;
  font-weight: 700;
  margin: 32px 0 16px;
  letter-spacing: -0.02em;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor h2 {
  font-size: 28px;
  font-weight: 700;
  margin: 28px 0 16px;
  letter-spacing: -0.01em;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor h3 {
  font-size: 24px;
  font-weight: 600;
  margin: 24px 0 12px;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor h4 {
  font-size: 22px;
  font-weight: 600;
  margin: 22px 0 12px;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor h5 {
  font-size: 20px;
  font-weight: 600;
  margin: 20px 0 12px;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor h6 {
  font-size: 18px;
  font-weight: 600;
  margin: 18px 0 12px;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor p {
  /* CRITICAL: Ensure paragraphs display properly */
  display: block !important;
  width: 100% !important;
  margin: 0 0 24px;
  font-size: 21px;
  color: #292929;
  line-height: 1.6;
  
  /* Prevent single-line issues */
  white-space: pre-wrap !important;
  word-wrap: break-word !important;
  overflow: visible !important;
}

.prosemirrorEditor p:last-child {
  margin-bottom: 0;
}

.prosemirrorEditor a {
  color: #1a8917;
  text-decoration: underline;
  text-decoration-color: rgba(26, 137, 23, 0.3);
  transition: text-decoration-color 0.2s ease;
}

.prosemirrorEditor a:hover {
  text-decoration-color: rgba(26, 137, 23, 0.8);
}

.prosemirrorEditor strong {
  font-weight: 700;
  color: #000;
}

.prosemirrorEditor em {
  font-style: italic;
}

.prosemirrorEditor code {
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
  font-size: 16px;
  background-color: rgba(0, 0, 0, 0.05);
  padding: 2px 6px;
  border-radius: 4px;
  color: #d73a49;
}

.prosemirrorEditor pre {
  background-color: #f6f8fa;
  border-radius: 6px;
  padding: 16px;
  margin: 24px 0;
  overflow-x: auto;
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
  font-size: 14px;
  line-height: 1.45;
  color: #24292e;
}

.prosemirrorEditor pre code {
  background: none;
  padding: 0;
  border-radius: 0;
  color: inherit;
  font-size: inherit;
}

.prosemirrorEditor blockquote {
  border-left: 4px solid #1a8917;
  padding-left: 20px;
  margin: 24px 0;
  font-style: italic;
  color: #555;
  font-size: 21px;
  background-color: rgba(26, 137, 23, 0.02);
  padding: 16px 20px;
  border-radius: 0 4px 4px 0;
}

.prosemirrorEditor img {
  max-width: 100%;
  height: auto;
  margin: 24px auto;
  border-radius: 6px;
  display: block;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

/* ULTRA AGGRESSIVE: Force list styling to override ALL global styles */

/* Global selector to override Tailwind and other global resets */
.editor :global(.ProseMirror ul),
.editor :global(.ProseMirror ol),
.prosemirrorEditor ul,
.prosemirrorEditor ol {
  margin: 16px 0 24px !important;
  padding-left: 32px !important;
  list-style-position: outside !important;
  display: block !important;
  list-style: revert !important; /* Use browser default */
}

.editor :global(.ProseMirror ul),
.prosemirrorEditor ul {
  list-style-type: disc !important;
  list-style: disc !important;
}

.editor :global(.ProseMirror ol),
.prosemirrorEditor ol {
  list-style-type: decimal !important;
  list-style: decimal !important;
  counter-reset: item !important;
}

.editor :global(.ProseMirror li),
.prosemirrorEditor li {
  margin-bottom: 8px !important;
  font-size: 21px !important;
  line-height: 1.6 !important;
  display: list-item !important;
  list-style: inherit !important;
  position: relative !important;
  padding-left: 0 !important;
}

.editor :global(.ProseMirror li p),
.prosemirrorEditor li p {
  margin: 0 0 8px !important;
  display: inline !important;
}

.editor :global(.ProseMirror li p:last-child),
.prosemirrorEditor li p:last-child {
  margin-bottom: 0 !important;
}

/* FORCE bullets and numbers with maximum possible specificity */
.editor :global(.ProseMirror ul li),
.prosemirrorEditor ul li {
  list-style-type: disc !important;
  list-style: disc !important;
  display: list-item !important;
  position: relative !important;
}

.editor :global(.ProseMirror ol li),
.prosemirrorEditor ol li {
  list-style-type: decimal !important;
  list-style: decimal !important;
  display: list-item !important;
  position: relative !important;
}

/* TRIPLE FALLBACK: Use pseudo-elements with extremely specific selectors */
body .editor :global(.ProseMirror ul li),
body .prosemirrorEditor ul li {
  position: relative !important;
}

body .editor :global(.ProseMirror ul li)::before,
body .prosemirrorEditor ul li::before {
  content: "•" !important;
  color: #292929 !important;
  font-weight: bold !important;
  font-size: 21px !important;
  position: absolute !important;
  left: -20px !important;
  top: 0 !important;
  display: block !important;
  line-height: 1.6 !important;
  width: 15px !important;
  text-align: center !important;
}

body .editor :global(.ProseMirror ol li),
body .prosemirrorEditor ol li {
  position: relative !important;
  counter-increment: item !important;
}

body .editor :global(.ProseMirror ol li)::before,
body .prosemirrorEditor ol li::before {
  content: counter(item) "." !important;
  color: #292929 !important;
  font-weight: bold !important;
  font-size: 21px !important;
  position: absolute !important;
  left: -25px !important;
  top: 0 !important;
  display: block !important;
  line-height: 1.6 !important;
  width: 20px !important;
  text-align: right !important;
}

body .editor :global(.ProseMirror ol),
body .prosemirrorEditor ol {
  counter-reset: item !important;
}

/* Nested lists */
.prosemirrorEditor ul ul,
.prosemirrorEditor ol ol,
.prosemirrorEditor ul ol,
.prosemirrorEditor ol ul {
  margin: 4px 0;
  padding-left: 24px;
}

.prosemirrorEditor hr {
  border: none;
  border-top: 2px solid #e1e5e9;
  margin: 32px 0;
}

/* Selection styling */
.prosemirrorEditor ::selection {
  background-color: #b3d9ff;
}

/* Focus styling */
.prosemirrorEditor:focus {
  outline: none;
}

/* Empty editor styling */
.prosemirrorEditor:empty {
  min-height: 150px;
}

/* Responsive design */
@media (max-width: 768px) {
  .modernToolbar {
    position: relative;
    top: 0;
    left: auto;
    transform: none;
    margin: 0 0 20px 0;
    opacity: 1;
    visibility: visible;
    pointer-events: all;
  }
  
  .toolbarContainer {
    padding: 6px 12px;
    border-radius: 10px;
    max-width: 100%;
    gap: 2px;
    overflow-x: auto;
  }
  
  .formatGroup {
    gap: 1px;
  }
  
  .toolBtn {
    width: 32px;
    height: 32px;
    border-radius: 6px;
    flex-shrink: 0;
  }
  
  .divider {
    height: 20px;
    margin: 0 4px;
  }
  
  .headingIcon {
    font-size: 11px;
  }
  
  .prosemirrorEditor {
    font-size: 18px;
  }
  
  .prosemirrorEditor h1 {
    font-size: 28px;
  }
  
  .prosemirrorEditor h2 {
    font-size: 24px;
  }
  
  .prosemirrorEditor h3 {
    font-size: 22px;
  }
  
  .prosemirrorEditor p {
    font-size: 18px;
  }
  
  .prosemirrorEditor li {
    font-size: 18px;
  }
}

/* Toolbar animations */
.editor:focus-within .modernToolbar {
  animation: slideInFromTop 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes slideInFromTop {
  from {
    opacity: 0;
    transform: translateX(-50%) translateY(-20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateX(-50%) translateY(0) scale(1);
  }
}

/* Custom scrollbar for editor */
.prosemirrorEditor::-webkit-scrollbar {
  width: 8px;
}

.prosemirrorEditor::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 4px;
}

.prosemirrorEditor::-webkit-scrollbar-thumb {
  background: #c1c1c1;
  border-radius: 4px;
}

.prosemirrorEditor::-webkit-scrollbar-thumb:hover {
  background: #a8a8a8;
}


/* ULTIMATE FIX: Force ProseMirror to work correctly regardless of global styles */
.editorContainer :global(.ProseMirror),
.editorContainer :global(.ProseMirror *),
.editorContent,
.prosemirrorEditor,
.editor :global(.ProseMirror),
.editor :global(.ProseMirror *) {
  /* FORCE proper layout */
  display: block !important;
  width: auto !important;
  height: auto !important;
  
  /* PREVENT single-line forcing */
  white-space: pre-wrap !important;
  overflow: visible !important;
  flex: none !important;
  
  /* ENSURE text wrapping */
  word-wrap: break-word !important;
  word-break: normal !important;
  
  /* RESET any problematic positioning */
  position: static !important;
  float: none !important;
  transform: none !important;
}

/* Special fix for the actual contenteditable area */
.editorContainer :global(.ProseMirror[contenteditable="true"]) {
  display: block !important;
  white-space: pre-wrap !important;
  word-wrap: break-word !important;
  overflow: visible !important;
  cursor: text !important;
  caret-color: #292929 !important;
}

/* CRITICAL ProseMirror CSS Reset - Prevent interference from global styles */
.editor :global(.ProseMirror *) {
  white-space: inherit !important;
  direction: inherit !important;
  unicode-bidi: inherit !important;
}

/* CRITICAL: Ensure ProseMirror itself has correct text flow and layout */
.editor :global(.ProseMirror) {
  /* Force proper block layout to prevent single-line issues */
  display: block !important;
  width: 100% !important;
  height: auto !important;
  
  /* Prevent single-line forcing */
  white-space: pre-wrap !important;
  word-wrap: break-word !important;
  overflow: visible !important;
  overflow-x: visible !important;
  overflow-y: visible !important;
  
  /* Reset any flex that could force single line */
  flex: none !important;
  flex-wrap: wrap !important;
  flex-direction: column !important;
  
  /* Essential editor behavior */
  outline: none !important;
  cursor: text !important;
  position: relative !important;
  unicode-bidi: plaintext !important;
  direction: ltr !important;
  text-align: start !important;
  font-family: inherit !important;
  line-height: inherit !important;
  
  /* Ensure caret positioning works */
  caret-color: #292929 !important;
}

/* Seamless editor styles - completely borderless and backgroundless */
.seamlessEditor {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
  border-radius: 0 !important;
  padding: 0 !important;
  margin: 0 !important;
  width: 100% !important;
  max-width: none !important;
}

.seamlessEditor :global(.ProseMirror) {
  background: transparent !important;
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
  margin: 0 !important;
  min-height: 500px !important;
  font-size: 18px !important;
  line-height: 1.7 !important;
  color: #1f2937 !important;
  font-family: Georgia, 'Times New Roman', serif !important;
  width: 100% !important;
  max-width: none !important;
  
  /* Mobile optimizations */
  -webkit-overflow-scrolling: touch !important;
  -webkit-text-size-adjust: 100% !important;
  text-size-adjust: 100% !important;
  touch-action: manipulation !important;
}

/* Mobile-specific seamless editor styles */
@media (max-width: 768px) {
  .seamlessEditor :global(.ProseMirror) {
    font-size: 17px !important; /* Better iOS reading size */
    line-height: 1.6 !important;
    min-height: 400px !important;
    padding-top: 0 !important; /* Remove padding since parent container handles spacing */
  }
  
  .seamlessEditor .modernToolbar {
    position: fixed !important;
    top: 20px !important;
    left: 10px !important;
    right: 10px !important;
    transform: none !important;
    margin: 0 !important;
    opacity: 1 !important;
    visibility: visible !important;
    z-index: 1001 !important; /* Float above all content */
    /* Clean transparent toolbar without white background */
    background: transparent !important;
    backdrop-filter: none !important;
    border-radius: 0 !important;
    box-shadow: none !important;
    padding: 4px 8px !important;
  }
  
  .seamlessEditor .toolbarContainer {
    width: 100% !important;
    max-width: calc(100vw - 2rem) !important;
    padding: 6px 8px !important;
    border-radius: 16px !important;
    gap: 2px !important;
  }
}

.seamlessEditor .modernToolbar {
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  position: fixed !important;
  top: 120px !important;
  left: 50% !important;
  transform: translateX(-50%) !important;
  z-index: 1000 !important;
}

.seamlessEditor:hover .modernToolbar,
.seamlessEditor:focus-within .modernToolbar {
  opacity: 1;
  visibility: visible;
}

/* Enhanced typography for seamless editor */
.seamlessEditor :global(.ProseMirror p) {
  margin: 0 0 1.2em 0 !important;
  font-size: 18px !important;
  line-height: 1.7 !important;
  color: #374151 !important;
}

.seamlessEditor :global(.ProseMirror h1) {
  font-size: 2.5em !important;
  margin: 1.5em 0 0.8em 0 !important;
  font-weight: 700 !important;
  color: #1f2937 !important;
  line-height: 1.2 !important;
}

.seamlessEditor :global(.ProseMirror h2) {
  font-size: 2em !important;
  margin: 1.3em 0 0.7em 0 !important;
  font-weight: 600 !important;
  color: #1f2937 !important;
  line-height: 1.3 !important;
}

.seamlessEditor :global(.ProseMirror h3) {
  font-size: 1.5em !important;
  margin: 1.2em 0 0.6em 0 !important;
  font-weight: 600 !important;
  color: #1f2937 !important;
  line-height: 1.4 !important;
}

.seamlessEditor :global(.ProseMirror blockquote) {
  margin: 1.5em 0 !important;
  padding: 0 0 0 1.5em !important;
  border-left: 4px solid #e5e7eb !important;
  font-style: italic !important;
  color: #6b7280 !important;
  background: transparent !important;
}

.seamlessEditor :global(.ProseMirror ul),
.seamlessEditor :global(.ProseMirror ol) {
  margin: 1em 0 !important;
  padding-left: 1.5em !important;
}

.seamlessEditor :global(.ProseMirror li) {
  margin: 0.5em 0 !important;
  line-height: 1.7 !important;
}

.seamlessEditor :global(.ProseMirror code) {
  background: rgba(0, 0, 0, 0.05) !important;
  padding: 0.2em 0.4em !important;
  border-radius: 3px !important;
  font-family: 'SF Mono', Monaco, 'Cascadia Code', 'Roboto Mono', Consolas, 'Courier New', monospace !important;
}

.seamlessEditor :global(.ProseMirror pre) {
  background: rgba(0, 0, 0, 0.05) !important;
  border-radius: 8px !important;
  padding: 1em !important;
  margin: 1.5em 0 !important;
  overflow-x: auto !important;
}

.seamlessEditor :global(.ProseMirror img) {
  max-width: 100% !important;
  height: auto !important;
  border-radius: 8px !important;
  margin: 1.5em 0 !important;
}

/* Main editor container */
.editor {
  /* CRITICAL: Ensure container doesn't force single line */
  display: block !important;
  width: 100%;
  max-width: none;
  margin: 0;
  
  /* Prevent any layout issues */
  overflow: visible !important;
  height: auto !important;
  
  /* Typography */
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;
  color: #292929;
}

/* Loading state */
.loading {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 400px;
  color: #6b7280;
  gap: 16px;
  font-size: 15px;
}

.loadingSpinner {
  width: 24px;
  height: 24px;
  border: 2px solid rgba(99, 102, 241, 0.2);
  border-top-color: #6366f1;
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* Modern floating toolbar */
.modernToolbar {
  position: fixed;
  top: 90px;
  left: 50%;
  transform: translateX(-50%);
  z-index: 1000;
  opacity: 0;
  visibility: hidden;
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  pointer-events: none;
}

.editor:focus-within .modernToolbar,
.modernToolbar:hover {
  opacity: 1;
  visibility: visible;
  pointer-events: all;
}

.toolbarContainer {
  display: flex;
  align-items: center;
  gap: 4px;
  padding: 8px 16px;
  /* Liquid Glass Effect */
  background: rgba(255, 255, 255, 0.08);
  backdrop-filter: blur(16px) saturate(180%);
  -webkit-backdrop-filter: blur(16px) saturate(180%);
  border: 1.5px solid rgba(255, 255, 255, 0.15);
  border-radius: 24px;
  box-shadow: 
    0 8px 32px rgba(0, 0, 0, 0.1),
    inset 0 1px 0 rgba(255, 255, 255, 0.2);
  position: relative;
  overflow: hidden;
  max-width: 90vw;
  overflow-x: auto;
  -webkit-overflow-scrolling: touch;
}

.toolbarContainer::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 50%;
  background: linear-gradient(180deg, rgba(255, 255, 255, 0.3) 0%, rgba(255, 255, 255, 0.1) 100%);
  border-radius: 24px 24px 0 0;
  pointer-events: none;
  opacity: 0.6;
}

/* Format groups */
.formatGroup {
  display: flex;
  align-items: center;
  gap: 2px;
}

/* Dividers */
.divider {
  width: 1px;
  height: 24px;
  background: rgba(0, 0, 0, 0.1);
  margin: 0 6px;
  flex-shrink: 0;
}

/* Tool buttons */
.toolBtn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  width: 36px;
  height: 36px;
  border: none;
  border-radius: 8px;
  background: transparent;
  color: #374151;
  cursor: pointer;
  transition: all 0.2s cubic-bezier(0.4, 0, 0.2, 1);
  position: relative;
  flex-shrink: 0;
}

.toolBtn:hover {
  background: rgba(99, 102, 241, 0.1);
  color: #6366f1;
  transform: scale(1.05);
}

.toolBtn:active {
  transform: scale(0.95);
}

.toolBtn.active {
  background: linear-gradient(135deg, #6366f1, #8b5cf6);
  color: white;
  box-shadow: 0 2px 8px rgba(99, 102, 241, 0.3);
}

.toolBtn.active:hover {
  background: linear-gradient(135deg, #5b5bd6, #7c3aed);
  transform: scale(1.05);
}

/* Heading icons */
.headingIcon {
  font-size: 12px;
  font-weight: 700;
  letter-spacing: -0.02em;
}

/* SVG icons in buttons */
.toolBtn svg {
  transition: transform 0.2s ease;
}

.toolBtn:hover svg {
  transform: scale(1.1);
}

.toolBtn.active svg {
  filter: drop-shadow(0 1px 2px rgba(0, 0, 0, 0.2));
}

/* Editor content area */
.editorContent {
  min-height: 400px;
  padding: 12px 0;
  line-height: 1.6;
  outline: none;
  font-size: 21px;
  color: #292929;
}

/* Combined ProseMirror and editorContent styling */
.editorContent.ProseMirror,
.editor :global(.ProseMirror).editorContent {
  /* CRITICAL: Force proper display and layout */
  display: block !important;
  width: 100% !important;
  height: auto !important;
  
  /* CRITICAL: Prevent single-line forcing */
  white-space: pre-wrap !important;
  word-wrap: break-word !important;
  overflow: visible !important;
  overflow-x: visible !important;
  overflow-y: visible !important;
  
  /* CRITICAL: Reset any flex that might force single line */
  flex: none !important;
  flex-wrap: wrap !important;
  flex-direction: column !important;
  
  /* Essential cursor and editing behavior */
  -webkit-user-modify: read-write-plaintext-only !important;
  outline: none !important;
  cursor: text !important;
  position: relative !important;
  
  /* Ensure proper text flow and caret visibility */
  unicode-bidi: plaintext !important;
  direction: ltr !important;
  text-align: start !important;
  
  /* Ensure caret is visible and in front of text */
  caret-color: #292929 !important;
  
  /* Reset any conflicting styles */
  transform: none !important;
  text-indent: 0 !important;
  letter-spacing: normal !important;
  
  /* Prevent cursor jumping issues */
  word-break: normal !important;
  overflow-wrap: break-word !important;
  hyphens: none !important;
  
  /* Ensure stable layout */
  -webkit-text-size-adjust: 100% !important;
  text-size-adjust: 100% !important;
  
  /* Medium-like styling */
  min-height: 400px;
  padding: 12px 0;
  line-height: 1.6;
  font-size: 21px;
  color: #292929;
  font-family: inherit;
}

/* ProseMirror-specific styling */
.prosemirrorEditor {
  /* CRITICAL: Force proper block display */
  display: block !important;
  width: 100% !important;
  height: auto !important;
  
  /* CRITICAL: Prevent single-line forcing */
  white-space: pre-wrap !important;
  word-wrap: break-word !important;
  overflow: visible !important;
  overflow-x: visible !important;
  overflow-y: visible !important;
  
  /* CRITICAL: Reset flex properties */
  flex: none !important;
  flex-wrap: wrap !important;
  flex-direction: column !important;
  
  /* Essential editor behavior */
  outline: none !important;
  line-height: 1.6;
  font-size: 21px;
  color: #292929;
  cursor: text !important;
  position: relative !important;
  unicode-bidi: plaintext !important;
  direction: ltr !important;
  caret-color: #292929 !important;
}

/* Placeholder styling */
.prosemirrorEditor[data-placeholder]:empty::before {
  content: attr(data-placeholder);
  color: #999;
  position: absolute;
  pointer-events: none;
  font-style: italic;
}

/* ProseMirror content styling */
.prosemirrorEditor h1 {
  font-size: 32px;
  font-weight: 700;
  margin: 32px 0 16px;
  letter-spacing: -0.02em;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor h2 {
  font-size: 28px;
  font-weight: 700;
  margin: 28px 0 16px;
  letter-spacing: -0.01em;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor h3 {
  font-size: 24px;
  font-weight: 600;
  margin: 24px 0 12px;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor h4 {
  font-size: 22px;
  font-weight: 600;
  margin: 22px 0 12px;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor h5 {
  font-size: 20px;
  font-weight: 600;
  margin: 20px 0 12px;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor h6 {
  font-size: 18px;
  font-weight: 600;
  margin: 18px 0 12px;
  line-height: 1.3;
  color: #000;
}

.prosemirrorEditor p {
  /* CRITICAL: Ensure paragraphs display properly */
  display: block !important;
  width: 100% !important;
  margin: 0 0 24px;
  font-size: 21px;
  color: #292929;
  line-height: 1.6;
  
  /* Prevent single-line issues */
  white-space: pre-wrap !important;
  word-wrap: break-word !important;
  overflow: visible !important;
}

.prosemirrorEditor p:last-child {
  margin-bottom: 0;
}

.prosemirrorEditor a {
  color: #1a8917;
  text-decoration: underline;
  text-decoration-color: rgba(26, 137, 23, 0.3);
  transition: text-decoration-color 0.2s ease;
}

.prosemirrorEditor a:hover {
  text-decoration-color: rgba(26, 137, 23, 0.8);
}

.prosemirrorEditor strong {
  font-weight: 700;
  color: #000;
}

.prosemirrorEditor em {
  font-style: italic;
}

.prosemirrorEditor code {
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
  font-size: 16px;
  background-color: rgba(0, 0, 0, 0.05);
  padding: 2px 6px;
  border-radius: 4px;
  color: #d73a49;
}

.prosemirrorEditor pre {
  background-color: #1e1e1e;
  border-radius: 8px;
  padding: 16px;
  margin: 24px 0;
  overflow-x: auto;
  font-family: 'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, monospace;
  font-size: 14px;
  line-height: 1.6;
  color: #d4d4d4;
  border: 1px solid #333;
}

.prosemirrorEditor pre code {
  background: none;
  padding: 0;
  border-radius: 0;
  color: inherit;
  font-size: inherit;
}

/* VS Code Dark Theme Syntax Highlighting */
.prosemirrorEditor pre :global(.token.comment),
.prosemirrorEditor pre :global(.token.prolog),
.prosemirrorEditor pre :global(.token.doctype),
.prosemirrorEditor pre :global(.token.cdata) {
  color: #6a9955 !important;
  font-style: italic;
}

.prosemirrorEditor pre :global(.token.punctuation) {
  color: #d4d4d4 !important;
}

.prosemirrorEditor pre :global(.token.property),
.prosemirrorEditor pre :global(.token.tag),
.prosemirrorEditor pre :global(.token.boolean),
.prosemirrorEditor pre :global(.token.number),
.prosemirrorEditor pre :global(.token.constant),
.prosemirrorEditor pre :global(.token.symbol),
.prosemirrorEditor pre :global(.token.deleted) {
  color: #b5cea8 !important;
}

.prosemirrorEditor pre :global(.token.selector),
.prosemirrorEditor pre :global(.token.attr-name),
.prosemirrorEditor pre :global(.token.string),
.prosemirrorEditor pre :global(.token.char),
.prosemirrorEditor pre :global(.token.builtin),
.prosemirrorEditor pre :global(.token.inserted) {
  color: #ce9178 !important;
}

.prosemirrorEditor pre :global(.token.operator),
.prosemirrorEditor pre :global(.token.entity),
.prosemirrorEditor pre :global(.token.url),
.prosemirrorEditor pre :global(.token.variable) {
  color: #d4d4d4 !important;
}

.prosemirrorEditor pre :global(.token.atrule),
.prosemirrorEditor pre :global(.token.attr-value),
.prosemirrorEditor pre :global(.token.function),
.prosemirrorEditor pre :global(.token.class-name) {
  color: #dcdcaa !important;
}

.prosemirrorEditor pre :global(.token.keyword) {
  color: #569cd6 !important;
  font-weight: 500;
}

.prosemirrorEditor pre :global(.token.regex),
.prosemirrorEditor pre :global(.token.important) {
  color: #f44747 !important;
}

.prosemirrorEditor pre :global(.token.important),
.prosemirrorEditor pre :global(.token.bold) {
  font-weight: bold;
}

.prosemirrorEditor pre :global(.token.italic) {
  font-style: italic;
}

.prosemirrorEditor pre :global(.token.entity) {
  cursor: help;
}

/* Language-specific adjustments */
.prosemirrorEditor pre :global(.token.namespace) {
  opacity: .7;
}

/* JavaScript/TypeScript specific */
.prosemirrorEditor pre :global(.token.template-string) {
  color: #ce9178 !important;
}

.prosemirrorEditor pre :global(.token.template-punctuation) {
  color: #569cd6 !important;
}

/* JSON specific */
.prosemirrorEditor pre :global(.token.json .token.property) {
  color: #9cdcfe !important;
}

/* CSS specific */
.prosemirrorEditor pre :global(.token.selector) {
  color: #d7ba7d !important;
}

.prosemirrorEditor pre :global(.token.property) {
  color: #9cdcfe !important;
}

/* HTML specific */
.prosemirrorEditor pre :global(.token.doctype .token.name) {
  color: #569cd6 !important;
}

.prosemirrorEditor pre :global(.token.tag .token.tag) {
  color: #569cd6 !important;
}

.prosemirrorEditor pre :global(.token.tag .token.punctuation) {
  color: #808080 !important;
}

.prosemirrorEditor pre :global(.token.attr-name) {
  color: #9cdcfe !important;
}

.prosemirrorEditor pre :global(.token.attr-value .token.punctuation) {
  color: #ce9178 !important;
}

.prosemirrorEditor pre :global(.token.attr-value .token.punctuation:first-child) {
  color: #ce9178 !important;
}

/* Add language indicator */
.prosemirrorEditor pre[data-language]::before {
  content: attr(data-language);
  position: absolute;
  top: 8px;
  right: 12px;
  background: rgba(255, 255, 255, 0.1);
  color: #a0a0a0;
  padding: 2px 8px;
  border-radius: 4px;
  font-size: 12px;
  font-weight: 500;
  text-transform: uppercase;
  letter-spacing: 0.5px;
}

.prosemirrorEditor pre {
  position: relative;
}

.prosemirrorEditor blockquote {
  border-left: 4px solid #1a8917;
  padding-left: 20px;
  margin: 24px 0;
  font-style: italic;
  color: #555;
  font-size: 21px;
  background-color: rgba(26, 137, 23, 0.02);
  padding: 16px 20px;
  border-radius: 0 4px 4px 0;
}

.prosemirrorEditor img {
  max-width: 100%;
  height: auto;
  margin: 24px auto;
  border-radius: 6px;
  display: block;
  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
}

/* CLEAN LIST STYLING: Proper bullet and number lists */

/* Base list styling */
.editor :global(.ProseMirror ul),
.editor :global(.ProseMirror ol),
.prosemirrorEditor ul,
.prosemirrorEditor ol {
  margin: 16px 0 24px !important;
  padding-left: 28px !important;
  list-style-position: outside !important;
  display: block !important;
}

/* Unordered lists (bullets) */
.editor :global(.ProseMirror ul),
.prosemirrorEditor ul {
  list-style-type: disc !important;
}

.editor :global(.ProseMirror ul li),
.prosemirrorEditor ul li {
  list-style-type: disc !important;
  display: list-item !important;
  margin-bottom: 8px !important;
  font-size: 21px !important;
  line-height: 1.6 !important;
}

/* Ordered lists (numbers) */
.editor :global(.ProseMirror ol),
.prosemirrorEditor ol {
  list-style-type: decimal !important;
  counter-reset: list-counter !important;
}

.editor :global(.ProseMirror ol li),
.prosemirrorEditor ol li {
  list-style-type: decimal !important;
  display: list-item !important;
  margin-bottom: 8px !important;
  font-size: 21px !important;
  line-height: 1.6 !important;
  counter-increment: list-counter !important;
}

/* List item content */
.editor :global(.ProseMirror li),
.prosemirrorEditor li {
  margin-bottom: 8px !important;
  font-size: 21px !important;
  line-height: 1.6 !important;
  display: list-item !important;
}

.editor :global(.ProseMirror li p),
.prosemirrorEditor li p {
  margin: 0 0 8px !important;
  display: inline !important;
}

.editor :global(.ProseMirror li p:last-child),
.prosemirrorEditor li p:last-child {
  margin-bottom: 0 !important;
}

/* Nested lists */
.prosemirrorEditor ul ul,
.prosemirrorEditor ol ol,
.prosemirrorEditor ul ol,
.prosemirrorEditor ol ul {
  margin: 4px 0;
  padding-left: 24px;
}

.prosemirrorEditor hr {
  border: none;
  border-top: 2px solid #e1e5e9;
  margin: 32px 0;
}

/* Selection styling */
.prosemirrorEditor ::selection {
  background-color: #b3d9ff;
}

/* Focus styling */
.prosemirrorEditor:focus {
  outline: none;
}

/* Empty editor styling */
.prosemirrorEditor:empty {
  min-height: 150px;
}

/* Responsive design */
@media (max-width: 768px) {
  .modernToolbar {
    position: fixed;
    top: 10px;
    left: 10px;
    right: 10px;
    transform: none;
    margin: 0;
    opacity: 1;
    visibility: visible;
    pointer-events: all;
    z-index: 1001; /* Higher z-index to float above content */
  }
  
  /* Ensure content area has proper spacing for floating toolbar */
  .editor {
    padding-top: 70px; /* Space for toolbar */
  }
  
  .toolbarContainer {
    padding: 6px 8px;
    border-radius: 16px;
    width: 100%;
    max-width: calc(100vw - 2rem); /* Ensure it fits within screen bounds */
    gap: 2px;
    overflow-x: auto;
    overflow-y: hidden;
    -webkit-overflow-scrolling: touch; /* Smooth scrolling on iOS */
    scrollbar-width: none; /* Hide scrollbar on Firefox */
    -ms-overflow-style: none; /* Hide scrollbar on IE/Edge */
    /* Add momentum scrolling */
    overscroll-behavior-x: contain;
  }
  
  .toolbarContainer::-webkit-scrollbar {
    display: none; /* Hide scrollbar on WebKit */
  }
  
  .formatGroup {
    gap: 1px;
    flex-shrink: 0; /* Prevent format groups from shrinking */
  }
  
  .toolBtn {
    width: 36px; /* Smaller but still touch-friendly */
    height: 36px;
    border-radius: 6px;
    flex-shrink: 0;
    font-size: 14px;
    transition: all 0.2s ease;
    touch-action: manipulation; /* Improve touch responsiveness */
    min-width: 36px; /* Ensure minimum touch target */
  }
  
  .toolBtn:active {
    transform: scale(0.95); /* Visual feedback on touch */
  }
  
  .divider {
    height: 20px;
    margin: 0 3px;
    flex-shrink: 0; /* Prevent dividers from disappearing */
  }
  
  .headingIcon {
    font-size: 10px;
    font-weight: 700;
    letter-spacing: -0.5px;
  }
  
  /* Ensure toolbar icons are properly sized */
  .toolBtn svg {
    width: 16px !important;
    height: 16px !important;
  }
  
  .prosemirrorEditor {
    font-size: 17px; /* Better iOS reading size */
    line-height: 1.6;
    padding: 0; /* Remove padding since parent container handles spacing */
    min-height: 400px;
    /* Better touch scrolling */
    -webkit-overflow-scrolling: touch;
    /* Prevent zoom on focus */
    -webkit-text-size-adjust: 100%;
    text-size-adjust: 100%;
  }
  
  .prosemirrorEditor h1 {
    font-size: 28px;
    line-height: 1.2;
    margin: 24px 0 16px;
  }
  
  .prosemirrorEditor h2 {
    font-size: 24px;
    line-height: 1.3;
    margin: 20px 0 14px;
  }
  
  .prosemirrorEditor h3 {
    font-size: 22px;
    line-height: 1.3;
    margin: 18px 0 12px;
  }
  
  .prosemirrorEditor p {
    font-size: 17px;
    line-height: 1.6;
    margin: 0 0 16px 0;
  }
  
  .prosemirrorEditor li {
    font-size: 17px;
    line-height: 1.6;
    margin: 0 0 8px 0;
  }
  
  .prosemirrorEditor blockquote {
    font-size: 17px;
    line-height: 1.6;
    margin: 20px 0;
    padding-left: 20px;
  }
  
  /* Better code block styling on mobile */
  .prosemirrorEditor pre {
    font-size: 14px;
    padding: 12px;
    margin: 16px 0;
    overflow-x: auto;
    -webkit-overflow-scrolling: touch;
  }
  
  .prosemirrorEditor code {
    font-size: 14px;
    padding: 2px 4px;
  }
}

/* Toolbar animations */
.editor:focus-within .modernToolbar {
  animation: slideInFromTop 0.3s cubic-bezier(0.4, 0, 0.2, 1);
}

@keyframes slideInFromTop {
  from {
    opacity: 0;
    transform: translateX(-50%) translateY(-20px) scale(0.95);
  }
  to {
    opacity: 1;
    transform: translateX(-50%) translateY(0) scale(1);
  }
}

/* Custom scrollbar for editor */
.prosemirrorEditor::-webkit-scrollbar {
  width: 8px;
}

.prosemirrorEditor::-webkit-scrollbar-track {
  background: #f1f1f1;
  border-radius: 4px;
}

.prosemirrorEditor::-webkit-scrollbar-thumb {
  background: #c1c1c1;
  border-radius: 4px;
}

.prosemirrorEditor::-webkit-scrollbar-thumb:hover {
  background: #a8a8a8;
}


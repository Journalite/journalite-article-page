{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/firebase/clientApp.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, connectAuthEmulator } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Firebase configuration from environment variables\nconst firebaseConfig = {\n    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n    measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\n};\n///\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Analytics only in browser environment\nlet analytics;\nif (typeof window !== 'undefined') {\n    try {\n        analytics = getAnalytics(app);\n    } catch (error) {\n        // Analytics initialization skipped in development\n    }\n}\n\n// Initialize Firebase Authentication\nconst auth = getAuth(app);\n\n// Initialize Firestore\nconst db = getFirestore(app);\n\n// Configure custom auth actions URL\nif (typeof window !== 'undefined') {\n    const actionCodeSettings = {\n        url: `${window.location.origin}/reset-password`,\n        handleCodeInApp: true,\n    };\n\n    // We need to update this in the forgot-password component when sending the reset email\n}\n\n// // Connect to Auth Emulator in development\n// if (process.env.NODE_ENV === 'development') {\n//     // connectAuthEmulator(auth, \"http://localhost:9099\", { disableWarnings: true });\n// }\n\n/////\n\nexport { app, analytics, auth, db };"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;;AAU3C;AATZ;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AACA,4DAA4D;AAC5D,iEAAiE;AAEjE,oDAAoD;AACpD,MAAM,iBAAiB;IACnB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACjB;AACA,GAAG;AAEH,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AAE1B,mDAAmD;AACnD,IAAI;AACJ,wCAAmC;IAC/B,IAAI;QACA,YAAY,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE;IAC7B,EAAE,OAAO,OAAO;IACZ,kDAAkD;IACtD;AACJ;AAEA,qCAAqC;AACrC,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AAErB,uBAAuB;AACvB,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;AAExB,oCAAoC;AACpC,wCAAmC;IAC/B,MAAM,qBAAqB;QACvB,KAAK,GAAG,OAAO,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC;QAC/C,iBAAiB;IACrB;AAEA,uFAAuF;AAC3F","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/services/userService.ts"],"sourcesContent":["import {\n    doc,\n    setDoc,\n    getDoc,\n    query,\n    collection,\n    where,\n    getDocs,\n    serverTimestamp\n} from 'firebase/firestore';\nimport { updateProfile } from 'firebase/auth';\nimport { auth, db } from '../firebase/clientApp';\n\nexport interface UserProfile {\n    uid: string;\n    firstName: string;\n    lastName: string;\n    username: string;\n    email: string;\n    createdAt: any;\n}\n\n/**\n * Checks if a username is already taken\n * @param username The username to check\n * @returns A promise that resolves to a boolean indicating if the username is taken\n */\nexport async function isUsernameTaken(username: string): Promise<boolean> {\n    try {\n        const usernameQuery = query(\n            collection(db, 'users'),\n            where('username', '==', username.toLowerCase())\n        );\n\n        const querySnapshot = await getDocs(usernameQuery);\n        return !querySnapshot.empty;\n    } catch (error) {\n        console.error('Error checking username:', error);\n        throw error;\n    }\n}\n\n/**\n * Creates a user profile in Firestore\n * @param uid User's Firebase Auth UID\n * @param profile User profile data\n */\nexport async function createUserProfile(uid: string, profile: Omit<UserProfile, 'uid' | 'createdAt'>): Promise<void> {\n    try {\n        // First check if this user ID already has a profile\n        const existingUserProfile = await getUserProfile(uid);\n        if (existingUserProfile) {\n            console.log('User profile already exists, skipping creation');\n            return;\n        }\n\n        // Check if email already exists in another profile\n        const emailQuery = query(\n            collection(db, 'users'),\n            where('email', '==', profile.email.toLowerCase())\n        );\n\n        const emailQuerySnapshot = await getDocs(emailQuery);\n        if (!emailQuerySnapshot.empty) {\n            throw new Error('Email is already associated with another account');\n        }\n\n        // Check if the username is already taken\n        const usernameTaken = await isUsernameTaken(profile.username);\n        if (usernameTaken) {\n            throw new Error('Username is already taken');\n        }\n\n        const userRef = doc(db, 'users', uid);\n\n        // Create the user profile\n        await setDoc(userRef, {\n            uid,\n            firstName: profile.firstName,\n            lastName: profile.lastName,\n            username: profile.username.toLowerCase(),\n            email: profile.email.toLowerCase(),\n            createdAt: serverTimestamp()\n        });\n\n        // Update the user's display name in Firebase Auth\n        if (auth.currentUser) {\n            await updateProfile(auth.currentUser, {\n                displayName: profile.username\n            });\n        }\n    } catch (error) {\n        console.error('Error creating user profile:', error);\n        throw error;\n    }\n}\n\n/**\n * Gets a user's profile from Firestore\n * @param uid User's Firebase Auth UID\n * @returns A promise that resolves to the user's profile or null if not found\n */\nexport async function getUserProfile(uid: string): Promise<UserProfile | null> {\n    try {\n        const userRef = doc(db, 'users', uid);\n        const userDoc = await getDoc(userRef);\n\n        if (userDoc.exists()) {\n            return userDoc.data() as UserProfile;\n        }\n\n        return null;\n    } catch (error) {\n        console.error('Error fetching user profile:', error);\n        throw error;\n    }\n} "],"names":[],"mappings":";;;;;AAAA;AAAA;AAUA;AAAA;AACA;;;;AAgBO,eAAe,gBAAgB,QAAgB;IAClD,IAAI;QACA,MAAM,gBAAgB,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EACtB,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,+HAAA,CAAA,KAAE,EAAE,UACf,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,YAAY,MAAM,SAAS,WAAW;QAGhD,MAAM,gBAAgB,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;QACpC,OAAO,CAAC,cAAc,KAAK;IAC/B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,MAAM;IACV;AACJ;AAOO,eAAe,kBAAkB,GAAW,EAAE,OAA+C;IAChG,IAAI;QACA,oDAAoD;QACpD,MAAM,sBAAsB,MAAM,eAAe;QACjD,IAAI,qBAAqB;YACrB,QAAQ,GAAG,CAAC;YACZ;QACJ;QAEA,mDAAmD;QACnD,MAAM,aAAa,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EACnB,CAAA,GAAA,sKAAA,CAAA,aAAU,AAAD,EAAE,+HAAA,CAAA,KAAE,EAAE,UACf,CAAA,GAAA,sKAAA,CAAA,QAAK,AAAD,EAAE,SAAS,MAAM,QAAQ,KAAK,CAAC,WAAW;QAGlD,MAAM,qBAAqB,MAAM,CAAA,GAAA,sKAAA,CAAA,UAAO,AAAD,EAAE;QACzC,IAAI,CAAC,mBAAmB,KAAK,EAAE;YAC3B,MAAM,IAAI,MAAM;QACpB;QAEA,yCAAyC;QACzC,MAAM,gBAAgB,MAAM,gBAAgB,QAAQ,QAAQ;QAC5D,IAAI,eAAe;YACf,MAAM,IAAI,MAAM;QACpB;QAEA,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,+HAAA,CAAA,KAAE,EAAE,SAAS;QAEjC,0BAA0B;QAC1B,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE,SAAS;YAClB;YACA,WAAW,QAAQ,SAAS;YAC5B,UAAU,QAAQ,QAAQ;YAC1B,UAAU,QAAQ,QAAQ,CAAC,WAAW;YACtC,OAAO,QAAQ,KAAK,CAAC,WAAW;YAChC,WAAW,CAAA,GAAA,sKAAA,CAAA,kBAAe,AAAD;QAC7B;QAEA,kDAAkD;QAClD,IAAI,+HAAA,CAAA,OAAI,CAAC,WAAW,EAAE;YAClB,MAAM,CAAA,GAAA,oNAAA,CAAA,gBAAa,AAAD,EAAE,+HAAA,CAAA,OAAI,CAAC,WAAW,EAAE;gBAClC,aAAa,QAAQ,QAAQ;YACjC;QACJ;IACJ,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM;IACV;AACJ;AAOO,eAAe,eAAe,GAAW;IAC5C,IAAI;QACA,MAAM,UAAU,CAAA,GAAA,sKAAA,CAAA,MAAG,AAAD,EAAE,+HAAA,CAAA,KAAE,EAAE,SAAS;QACjC,MAAM,UAAU,MAAM,CAAA,GAAA,sKAAA,CAAA,SAAM,AAAD,EAAE;QAE7B,IAAI,QAAQ,MAAM,IAAI;YAClB,OAAO,QAAQ,IAAI;QACvB;QAEA,OAAO;IACX,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,gCAAgC;QAC9C,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 158, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/app/register/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport Link from 'next/link';\nimport { useRouter } from 'next/navigation';\nimport { createUserWithEmailAndPassword, sendEmailVerification, GoogleAuthProvider, signInWithPopup, onAuthStateChanged } from 'firebase/auth';\nimport { auth } from '../../firebase/clientApp';\nimport { createUserProfile, isUsernameTaken, getUserProfile } from '../../services/userService';\n\nasync function handleEmailSignUp(email: string, password: string) {\n  try {\n    const userCredential = await createUserWithEmailAndPassword(auth, email, password);\n    if (auth.currentUser) {\n      await sendEmailVerification(auth.currentUser);\n    }\n    console.log('Sign-up successful', userCredential.user);\n    return userCredential;\n  } catch (error) {\n    console.error('Sign-up failed', error);\n    throw error;\n  }\n}\n\nasync function handleGoogleSignUp() {\n  const provider = new GoogleAuthProvider();\n  try {\n    // Before attempting sign-in, we'll set up auth state change handling\n    let authInProgress = true;\n    let existingAccount = false;\n    \n    // Set up one-time auth state listener to detect if this is a sign-in to existing account\n    const unsubscribe = onAuthStateChanged(auth, (user) => {\n      if (user && authInProgress) {\n        authInProgress = false;\n        existingAccount = true;\n        unsubscribe();\n      }\n    });\n    \n    // Attempt sign-in with Google\n    const result = await signInWithPopup(auth, provider);\n    authInProgress = false;\n    unsubscribe();\n    \n    const user = result.user;\n    \n    // Check if this was an existing user that just signed in\n    if (existingAccount) {\n      console.log('User already exists, signed in with existing account');\n      return result;\n    }\n    \n    // If we got here, it's a new user - check for existing profile just to be safe\n    const existingProfile = await getUserProfile(user.uid);\n    \n    // If a profile exists, user has signed in before \n    if (existingProfile) {\n      console.log('User already has a profile, proceeding to app');\n      return result;\n    }\n    \n    // New user needs a profile - prepare data from Google account info\n    const userDisplayName = user.displayName || '';\n    const nameParts = userDisplayName.split(' ');\n    const firstName = nameParts[0] || '';\n    const lastName = nameParts.slice(1).join(' ') || '';\n    \n    // Generate a username from the email address (before the @ symbol)\n    const emailUsername = user.email?.split('@')[0] || '';\n    \n    // Check if the username is already taken\n    const isUsernameAvailable = !(await isUsernameTaken(emailUsername));\n    \n    if (isUsernameAvailable) {\n      // Username is available, create profile with it\n      await createUserProfile(user.uid, {\n        firstName,\n        lastName,\n        username: emailUsername,\n        email: user.email || ''\n      });\n    } else {\n      // Username is taken, we'll let the user choose a new one in the profile setup page\n      // But we still create a temporary profile with a random suffix\n      const randomSuffix = Math.floor(Math.random() * 10000);\n      await createUserProfile(user.uid, {\n        firstName,\n        lastName,\n        username: `${emailUsername}${randomSuffix}`,\n        email: user.email || ''\n      });\n    }\n    \n    console.log('Google sign-up successful', user);\n    return result;\n  } catch (error: any) {\n    // Check specific Firebase error codes\n    if (error.code === 'auth/account-exists-with-different-credential') {\n      throw new Error('An account already exists with the same email address but different sign-in credentials. Please sign in using the original method.');\n    }\n    \n    console.error('Google sign-up failed', error);\n    throw error;\n  }\n}\n\nexport default function Register() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [username, setUsername] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [touchedFields, setTouchedFields] = useState<Record<string, boolean>>({});\n  const [customValidation, setCustomValidation] = useState<Record<string, string>>({});\n  const [usernameAvailable, setUsernameAvailable] = useState<boolean | null>(null);\n  const [isCheckingUsername, setIsCheckingUsername] = useState(false);\n  \n  const router = useRouter();\n\n  const handleBlur = (e: React.FocusEvent<HTMLInputElement>) => {\n    const { name, value, validity } = e.target;\n    setTouchedFields({ ...touchedFields, [name]: true });\n    \n    // Clear previous validation message\n    setCustomValidation({ ...customValidation, [name]: '' });\n    \n    // Add a custom validation message if empty\n    if (validity.valueMissing) {\n      let message = 'This field is required';\n      if (name === 'email') message = 'Please enter your email address';\n      if (name === 'password') message = 'Please enter a password';\n      if (name === 'confirmPassword') message = 'Please confirm your password';\n      if (name === 'firstName') message = 'Please enter your first name';\n      if (name === 'lastName') message = 'Please enter your last name';\n      if (name === 'username') message = 'Please choose a username';\n      \n      setCustomValidation({ ...customValidation, [name]: message });\n    }\n  };\n\n  const checkUsername = async (username: string) => {\n    if (username.length < 2) {\n      setUsernameAvailable(null);\n      return;\n    }\n    \n    try {\n      setIsCheckingUsername(true);\n      const taken = await isUsernameTaken(username);\n      setUsernameAvailable(!taken);\n    } catch (error) {\n      console.error('Error checking username:', error);\n    } finally {\n      setIsCheckingUsername(false);\n    }\n  };\n\n  const handleUsernameChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value;\n    setUsername(value);\n    \n    // Debounce the username check\n    const timeoutId = setTimeout(() => {\n      if (value.length >= 2) {\n        checkUsername(value);\n      } else {\n        setUsernameAvailable(null);\n      }\n    }, 500);\n    \n    return () => clearTimeout(timeoutId);\n  };\n\n  const validateForm = () => {\n    const newValidation: Record<string, string> = {};\n    const newTouchedFields: Record<string, boolean> = {};\n    let isValid = true;\n    \n    // Email validation\n    newTouchedFields.email = true;\n    if (!email.trim()) {\n      newValidation.email = 'Please enter your email address';\n      isValid = false;\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(email)) {\n      newValidation.email = 'Please enter a valid email address';\n      isValid = false;\n    }\n    \n    // Password validation\n    newTouchedFields.password = true;\n    if (!password) {\n      newValidation.password = 'Please enter a password';\n      isValid = false;\n    } else if (password.length < 6) {\n      newValidation.password = 'Password must be at least 6 characters';\n      isValid = false;\n    }\n    \n    // Confirm password validation\n    newTouchedFields.confirmPassword = true;\n    if (password !== confirmPassword) {\n      newValidation.confirmPassword = 'Passwords do not match';\n      isValid = false;\n    }\n    \n    // First name validation\n    newTouchedFields.firstName = true;\n    if (!firstName.trim()) {\n      newValidation.firstName = 'Please enter your first name';\n      isValid = false;\n    }\n    \n    // Last name validation\n    newTouchedFields.lastName = true;\n    if (!lastName.trim()) {\n      newValidation.lastName = 'Please enter your last name';\n      isValid = false;\n    }\n    \n    // Username validation\n    newTouchedFields.username = true;\n    if (!username.trim()) {\n      newValidation.username = 'Please choose a username';\n      isValid = false;\n    } else if (username.length < 2) {\n      newValidation.username = 'Username must be at least 2 characters';\n      isValid = false;\n    } else if (usernameAvailable === false) {\n      newValidation.username = 'This username is already taken';\n      isValid = false;\n    }\n    \n    setTouchedFields({ ...touchedFields, ...newTouchedFields });\n    setCustomValidation({ ...customValidation, ...newValidation });\n    \n    return isValid;\n  };\n\n  const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    \n    if (!validateForm()) return;\n    \n    setIsLoading(true);\n    setError('');\n    \n    try {\n      // First, check if the username is available before trying to create auth account\n      const isUsernameAvailable = !(await isUsernameTaken(username));\n      \n      if (!isUsernameAvailable) {\n        setCustomValidation({ ...customValidation, username: 'This username is already taken' });\n        throw new Error('Username is already taken');\n      }\n      \n      // Create the authentication account\n      const userCredential = await handleEmailSignUp(email, password);\n      \n      // Create the user profile in Firestore\n      await createUserProfile(userCredential.user.uid, {\n        firstName,\n        lastName,\n        username,\n        email\n      });\n      \n      // Redirect to login page on successful registration\n      router.push('/login');\n    } catch (err: unknown) {\n      let errorMessage = 'Failed to create account';\n      if (err instanceof Error) {\n        // Handle specific Firebase errors\n        if (err.message.includes('email-already-in-use')) {\n          errorMessage = 'This email is already registered. Please use a different email or sign in.';\n          setCustomValidation({ ...customValidation, email: 'This email is already registered' });\n        } else if (err.message.includes('invalid-email')) {\n          errorMessage = 'Please enter a valid email address';\n          setCustomValidation({ ...customValidation, email: 'Please enter a valid email address' });\n        } else if (err.message.includes('weak-password')) {\n          errorMessage = 'Password is too weak. Please use at least 6 characters.';\n          setCustomValidation({ ...customValidation, password: 'Password is too weak' });\n        } else if (err.message.includes('Username is already taken')) {\n          errorMessage = 'This username is already taken. Please choose a different username.';\n          setCustomValidation({ ...customValidation, username: 'This username is already taken' });\n        }\n      }\n      setError(errorMessage);\n      console.error(err);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  // Show validation styling only if field is touched\n  const getInputClasses = (fieldName: string) => {\n    const baseClasses = \"w-full px-5 py-3.5 bg-[#f8f5ec] border border-[#e8e1d1] rounded-md focus:outline-none focus:ring-1 focus:ring-slate-500\";\n    \n    if (touchedFields[fieldName] && customValidation[fieldName]) {\n      return `${baseClasses} border-red-300 bg-red-50`;\n    }\n    \n    // Add green border for valid username\n    if (fieldName === 'username' && username.length >= 2 && usernameAvailable === true) {\n      return `${baseClasses} border-green-300 bg-green-50`;\n    }\n    \n    return baseClasses;\n  };\n\n  return (\n    <div className=\"min-h-screen bg-[#f5efe0] flex\">\n      {/* Left content area */}\n      <div className=\"w-full md:w-1/2 flex flex-col justify-center\">\n        <div className=\"w-full max-w-sm mx-auto px-6 md:px-0 md:ml-20 xl:ml-32\">\n          {/* Logo and tagline */}\n          <div className=\"mb-12\">\n            <h1 className=\"text-5xl md:text-6xl font-serif font-normal text-slate-900\">Journalite</h1>\n            <div className=\"mt-4 text-lg md:text-xl text-slate-800 italic\">\n              <p>Every thought has a doorway.</p>\n              <p>This is yours.</p>\n            </div>\n          </div>\n\n          {/* Error message */}\n          {error && (\n            <div className=\"mb-6 p-3 bg-red-50 text-red-700 text-sm rounded-md\">\n              {error}\n            </div>\n          )}\n\n          {/* Registration form */}\n          <form onSubmit={handleSubmit} className=\"space-y-4 w-full\" noValidate>\n            <div className=\"flex gap-4\">\n              <div className=\"w-1/2\">\n                <input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  className={getInputClasses('firstName')}\n                  placeholder=\"First name\"\n                  value={firstName}\n                  onChange={(e) => setFirstName(e.target.value)}\n                  onBlur={handleBlur}\n                  required\n                />\n                {touchedFields.firstName && customValidation.firstName && (\n                  <p className=\"mt-1 text-sm text-red-500\">{customValidation.firstName}</p>\n                )}\n              </div>\n              \n              <div className=\"w-1/2\">\n                <input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  className={getInputClasses('lastName')}\n                  placeholder=\"Last name\"\n                  value={lastName}\n                  onChange={(e) => setLastName(e.target.value)}\n                  onBlur={handleBlur}\n                  required\n                />\n                {touchedFields.lastName && customValidation.lastName && (\n                  <p className=\"mt-1 text-sm text-red-500\">{customValidation.lastName}</p>\n                )}\n              </div>\n            </div>\n            \n            <div>\n              <div className=\"relative\">\n                <input\n                  id=\"username\"\n                  name=\"username\"\n                  type=\"text\"\n                  className={getInputClasses('username')}\n                  placeholder=\"Username\"\n                  value={username}\n                  onChange={handleUsernameChange}\n                  onBlur={handleBlur}\n                  required\n                />\n                {isCheckingUsername && (\n                  <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                    <div className=\"animate-spin h-5 w-5 border-2 border-slate-500 rounded-full border-t-transparent\"></div>\n                  </div>\n                )}\n                {!isCheckingUsername && username.length >= 2 && usernameAvailable === true && (\n                  <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-green-500\">\n                    ✓\n                  </div>\n                )}\n              </div>\n              {touchedFields.username && customValidation.username && (\n                <p className=\"mt-1 text-sm text-red-500\">{customValidation.username}</p>\n              )}\n              {!customValidation.username && username.length >= 2 && usernameAvailable === true && (\n                <p className=\"mt-1 text-sm text-green-500\">Username is available</p>\n              )}\n              {!customValidation.username && username.length >= 2 && usernameAvailable === false && (\n                <p className=\"mt-1 text-sm text-red-500\">Username is already taken</p>\n              )}\n            </div>\n\n            <div>\n              <input\n                id=\"email\"\n                name=\"email\"\n                type=\"email\"\n                className={getInputClasses('email')}\n                placeholder=\"Email address\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                onBlur={handleBlur}\n                required\n              />\n              {touchedFields.email && customValidation.email && (\n                <p className=\"mt-1 text-sm text-red-500\">{customValidation.email}</p>\n              )}\n            </div>\n\n            <div>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                className={getInputClasses('password')}\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                onBlur={handleBlur}\n                required\n              />\n              {touchedFields.password && customValidation.password && (\n                <p className=\"mt-1 text-sm text-red-500\">{customValidation.password}</p>\n              )}\n            </div>\n\n            <div>\n              <input\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                type=\"password\"\n                className={getInputClasses('confirmPassword')}\n                placeholder=\"Confirm password\"\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n                onBlur={handleBlur}\n                required\n              />\n              {touchedFields.confirmPassword && customValidation.confirmPassword && (\n                <p className=\"mt-1 text-sm text-red-500\">{customValidation.confirmPassword}</p>\n              )}\n            </div>\n\n            <div>\n              <button\n                type=\"submit\"\n                className=\"w-full flex items-center justify-center px-4 py-3.5 bg-[#1a1a19] text-white rounded-md hover:bg-[#2a2a29] focus:outline-none focus:ring-2 focus:ring-slate-500 focus:ring-offset-2\"\n                disabled={isLoading}\n              >\n                {isLoading ? (\n                  \"Creating your account...\"\n                ) : (\n                  <div className=\"flex items-center\">\n                    <span className=\"mr-2\">→</span>\n                    <span>Create your account</span>\n                  </div>\n                )}\n              </button>\n            </div>\n\n            <div className=\"flex justify-center pt-2 text-slate-700 text-sm\">\n              <span className=\"mr-2\">Already have an account?</span>\n              <Link href=\"/login\" className=\"hover:text-slate-900\">\n                Sign in\n              </Link>\n            </div>\n          </form>\n\n          {/* Social login options */}\n          <div className=\"mt-8 space-y-3\">\n            <button \n              className=\"w-full flex items-center justify-center px-4 py-3 border border-[#e8e1d1] bg-[#f8f5ec] rounded-md hover:bg-[#f0ece3] transition-colors\"\n              onClick={async () => {\n                try {\n                  setIsLoading(true);\n                  setError('');\n                  await handleGoogleSignUp();\n                  router.push('/profile-setup');\n                } catch (err: any) {\n                  console.error('Google sign-up error:', err);\n                  \n                  // Handle specific errors with user-friendly messages\n                  if (err.message?.includes('account already exists')) {\n                    setError('An account with this email already exists. Please use the sign-in page or a different email.');\n                  } else if (err.code === 'auth/popup-closed-by-user') {\n                    setError('Sign-in was cancelled. Please try again.');\n                  } else if (err.code === 'auth/network-request-failed') {\n                    setError('Network error. Please check your internet connection and try again.');\n                  } else {\n                    setError('Google sign-up failed. Please try again or use email registration.');\n                  }\n                } finally {\n                  setIsLoading(false);\n                }\n              }}\n            >\n              <svg className=\"w-5 h-5 mr-2\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n                <path d=\"M22.56 12.25c0-.78-.07-1.53-.2-2.25H12v4.26h5.92c-.26 1.37-1.04 2.53-2.21 3.31v2.77h3.57c2.08-1.92 3.28-4.74 3.28-8.09z\" fill=\"#4285F4\"/>\n                <path d=\"M12 23c2.97 0 5.46-.98 7.28-2.66l-3.57-2.77c-.98.66-2.23 1.06-3.71 1.06-2.86 0-5.29-1.93-6.16-4.53H2.18v2.84C3.99 20.53 7.7 23 12 23z\" fill=\"#34A853\"/>\n                <path d=\"M5.84 14.09c-.22-.66-.35-1.36-.35-2.09s.13-1.43.35-2.09V7.07H2.18C1.43 8.55 1 10.22 1 12s.43 3.45 1.18 4.93l2.85-2.22.81-.62z\" fill=\"#FBBC05\"/>\n                <path d=\"M12 5.38c1.62 0 3.06.56 4.21 1.64l3.15-3.15C17.45 2.09 14.97 1 12 1 7.7 1 3.99 3.47 2.18 7.07l3.66 2.84c.87-2.6 3.3-4.53 6.16-4.53z\" fill=\"#EA4335\"/>\n              </svg>\n              <span className=\"text-slate-800\">Sign up with Google</span>\n            </button>\n          </div>\n\n          {/* Bottom tagline */}\n          <div className=\"mt-20 mb-8 text-slate-700 italic\">\n            <p>Words are the threads of thought.</p>\n          </div>\n        </div>\n      </div>\n\n      {/* Right image area - converted to background div */}\n      <div className=\"hidden md:block w-1/2 relative bg-[#f5efe0]\">\n        <div \n          className=\"absolute inset-0 bg-cover bg-center bg-no-repeat\" \n          style={{ \n            backgroundImage: 'url(\"/images/login.png\")',\n            pointerEvents: 'none'\n          }}\n          aria-hidden=\"true\"\n        ></div>\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}
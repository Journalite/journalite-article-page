{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/firebase/clientApp.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, connectAuthEmulator } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Firebase configuration from environment variables\nconst firebaseConfig = {\n    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n    measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\n};\n///\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Analytics only in browser environment\nlet analytics;\nif (typeof window !== 'undefined') {\n    try {\n        analytics = getAnalytics(app);\n    } catch (error) {\n        // Analytics initialization skipped in development\n    }\n}\n\n// Initialize Firebase Authentication\nconst auth = getAuth(app);\n\n// Initialize Firestore\nconst db = getFirestore(app);\n\n// Configure custom auth actions URL\nif (typeof window !== 'undefined') {\n    const actionCodeSettings = {\n        url: `${window.location.origin}/reset-password`,\n        handleCodeInApp: true,\n    };\n\n    // We need to update this in the forgot-password component when sending the reset email\n}\n\n// // Connect to Auth Emulator in development\n// if (process.env.NODE_ENV === 'development') {\n//     // connectAuthEmulator(auth, \"http://localhost:9099\", { disableWarnings: true });\n// }\n\n/////\n\nexport { app, analytics, auth, db };"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;;AAU3C;AATZ;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;;;;;AACA,4DAA4D;AAC5D,iEAAiE;AAEjE,oDAAoD;AACpD,MAAM,iBAAiB;IACnB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACjB;AACA,GAAG;AAEH,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,uLAAA,CAAA,gBAAa,AAAD,EAAE;AAE1B,mDAAmD;AACnD,IAAI;AACJ,wCAAmC;IAC/B,IAAI;QACA,YAAY,CAAA,GAAA,6KAAA,CAAA,eAAY,AAAD,EAAE;IAC7B,EAAE,OAAO,OAAO;IACZ,kDAAkD;IACtD;AACJ;AAEA,qCAAqC;AACrC,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AAErB,uBAAuB;AACvB,MAAM,KAAK,CAAA,GAAA,sKAAA,CAAA,eAAY,AAAD,EAAE;AAExB,oCAAoC;AACpC,wCAAmC;IAC/B,MAAM,qBAAqB;QACvB,KAAK,GAAG,OAAO,QAAQ,CAAC,MAAM,CAAC,eAAe,CAAC;QAC/C,iBAAiB;IACrB;AAEA,uFAAuF;AAC3F","debugId":null}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/firebase/notifications.ts"],"sourcesContent":["import {\n    collection,\n    addDoc,\n    getDocs,\n    getDoc,\n    doc,\n    query,\n    orderBy,\n    Timestamp,\n    where,\n    updateDoc,\n    deleteDoc,\n    limit\n} from 'firebase/firestore';\nimport { db, auth } from './clientApp';\n\n// Notification interface matching Firestore structure\nexport interface Notification {\n    id?: string;\n    userId: string;\n    type: 'comment' | 'reply' | 'like' | 'follow';\n    read: boolean;\n    sourceId: string; // ID of the article/comment\n    sourceType: 'article' | 'comment' | 'user';\n    message: string;\n    fromUser: {\n        id: string;\n        name: string;\n        username?: string; // Add username field for profile links\n    };\n    createdAt: Timestamp;\n    articleSlug?: string; // Optional slug to link directly to the article\n    articleTitle?: string; // Optional article title for context\n}\n\n/**\n * Create a new notification when someone comments on a user's post\n */\nexport async function createCommentNotification(\n    ownerId: string,\n    articleId: string,\n    articleSlug: string,\n    articleTitle: string,\n    commentId: string,\n    commentText: string\n) {\n    try {\n        // Skip if the owner is the commenter (don't notify yourself)\n        const currentUser = auth.currentUser;\n        if (!currentUser || currentUser.uid === ownerId) {\n            return null;\n        }\n\n        // Create notification object\n        const notification: Omit<Notification, 'id'> = {\n            userId: ownerId, // Who will receive the notification\n            type: 'comment',\n            read: false,\n            sourceId: commentId,\n            sourceType: 'comment',\n            message: `${currentUser.displayName || 'Someone'} commented on your article: \"${commentText.substring(0, 50)}${commentText.length > 50 ? '...' : ''}\"`,\n            fromUser: {\n                id: currentUser.uid,\n                name: currentUser.displayName || 'Anonymous'\n            },\n            createdAt: Timestamp.now(),\n            articleSlug,\n            articleTitle\n        };\n\n        // Add to Firestore\n        const docRef = await addDoc(collection(db, 'notifications'), notification);\n\n        return {\n            id: docRef.id,\n            ...notification\n        };\n    } catch (error) {\n        console.error('Error creating notification:', error);\n        return null;\n    }\n}\n\n/**\n * Create a new notification when someone follows a user\n */\nexport async function createFollowNotification(\n    targetUserId: string,\n    followerName: string,\n    followerId: string,\n    followerUsername: string\n) {\n    try {\n        // Skip if user is following themselves (shouldn't happen due to checks in followUser)\n        if (targetUserId === followerId) {\n            return null;\n        }\n\n        // Create notification object\n        const notification: Omit<Notification, 'id'> = {\n            userId: targetUserId, // Who will receive the notification\n            type: 'follow',\n            read: false,\n            sourceId: followerId,\n            sourceType: 'user',\n            message: `${followerName} (@${followerUsername}) started following you`,\n            fromUser: {\n                id: followerId,\n                name: followerName,\n                username: followerUsername\n            },\n            createdAt: Timestamp.now()\n        };\n\n        // Add to Firestore\n        const docRef = await addDoc(collection(db, 'notifications'), notification);\n\n        return {\n            id: docRef.id,\n            ...notification\n        };\n    } catch (error) {\n        console.error('Error creating follow notification:', error);\n        return null;\n    }\n}\n\n/**\n * Get all notifications for the current user\n */\nexport async function getUserNotifications(unreadOnly = false) {\n    try {\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error('User not authenticated');\n        }\n\n        // Create base query\n        const notificationsRef = collection(db, 'notifications');\n        let q;\n\n        if (unreadOnly) {\n            // Only fetch unread notifications\n            q = query(\n                notificationsRef,\n                where('userId', '==', currentUser.uid),\n                where('read', '==', false),\n                orderBy('createdAt', 'desc'),\n                limit(100)\n            );\n        } else {\n            // Fetch all notifications\n            q = query(\n                notificationsRef,\n                where('userId', '==', currentUser.uid),\n                orderBy('createdAt', 'desc'),\n                limit(100)\n            );\n        }\n\n        const querySnapshot = await getDocs(q);\n\n        const notifications: Notification[] = [];\n        querySnapshot.forEach((doc) => {\n            notifications.push({\n                id: doc.id,\n                ...doc.data() as Omit<Notification, 'id'>\n            });\n        });\n\n        return notifications;\n    } catch (error) {\n        console.error('Error fetching notifications:', error);\n        throw error;\n    }\n}\n\n/**\n * Mark a notification as read\n */\nexport async function markNotificationAsRead(notificationId: string) {\n    try {\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error('User not authenticated');\n        }\n\n        const notificationRef = doc(db, 'notifications', notificationId);\n        const notificationSnap = await getDoc(notificationRef);\n\n        if (!notificationSnap.exists()) {\n            throw new Error('Notification not found');\n        }\n\n        const notificationData = notificationSnap.data() as Notification;\n\n        // Check if the notification belongs to the current user\n        if (notificationData.userId !== currentUser.uid) {\n            throw new Error('Unauthorized access to notification');\n        }\n\n        // Update the read status\n        await updateDoc(notificationRef, {\n            read: true\n        });\n\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error('Error marking notification as read:', error);\n        throw error;\n    }\n}\n\n/**\n * Mark all notifications as read for the current user\n */\nexport async function markAllNotificationsAsRead() {\n    try {\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error('User not authenticated');\n        }\n\n        const notificationsRef = collection(db, 'notifications');\n        const q = query(\n            notificationsRef,\n            where('userId', '==', currentUser.uid),\n            where('read', '==', false)\n        );\n\n        const querySnapshot = await getDocs(q);\n\n        // Create an array of promises to update each notification\n        const updatePromises = querySnapshot.docs.map(doc =>\n            updateDoc(doc.ref, { read: true })\n        );\n\n        // Execute all updates in parallel\n        await Promise.all(updatePromises);\n\n        return {\n            success: true,\n            count: querySnapshot.size\n        };\n    } catch (error) {\n        console.error('Error marking all notifications as read:', error);\n        throw error;\n    }\n}\n\n/**\n * Delete a notification\n */\nexport async function deleteNotification(notificationId: string) {\n    try {\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error('User not authenticated');\n        }\n\n        const notificationRef = doc(db, 'notifications', notificationId);\n        const notificationSnap = await getDoc(notificationRef);\n\n        if (!notificationSnap.exists()) {\n            throw new Error('Notification not found');\n        }\n\n        const notificationData = notificationSnap.data() as Notification;\n\n        // Check if the notification belongs to the current user\n        if (notificationData.userId !== currentUser.uid) {\n            throw new Error('Unauthorized access to notification');\n        }\n\n        // Delete the notification\n        await deleteDoc(notificationRef);\n\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error('Error deleting notification:', error);\n        throw error;\n    }\n}\n\n/**\n * Get the count of unread notifications\n */\nexport async function getUnreadNotificationsCount() {\n    try {\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            return 0;\n        }\n\n        const notificationsRef = collection(db, 'notifications');\n        const q = query(\n            notificationsRef,\n            where('userId', '==', currentUser.uid),\n            where('read', '==', false)\n        );\n\n        const querySnapshot = await getDocs(q);\n        return querySnapshot.size;\n    } catch (error) {\n        console.error('Error counting unread notifications:', error);\n        return 0;\n    }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 285, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/services/userService.ts"],"sourcesContent":["import {\n    doc,\n    setDoc,\n    getDoc,\n    query,\n    collection,\n    where,\n    getDocs,\n    serverTimestamp,\n    updateDoc,\n    arrayUnion,\n    arrayRemove,\n    increment,\n    limit,\n    deleteDoc\n} from 'firebase/firestore';\nimport { updateProfile, deleteUser as deleteFirebaseAuthUser } from 'firebase/auth';\nimport { auth, db } from '../firebase/clientApp';\nimport { createFollowNotification } from '../firebase/notifications';\n\nexport interface UserProfile {\n    uid: string;\n    firstName: string;\n    lastName: string;\n    username: string;\n    email: string;\n    bio?: string;\n    createdAt: any;\n    following?: string[];\n    followers?: string[];\n    followersCount?: number;\n    followingCount?: number;\n    interests?: string[];\n}\n\n/**\n * Checks if a username is already taken\n * @param username The username to check\n * @returns A promise that resolves to a boolean indicating if the username is taken\n */\nexport async function isUsernameTaken(username: string): Promise<boolean> {\n    try {\n        const usernameQuery = query(\n            collection(db, 'users'),\n            where('username', '==', username.toLowerCase())\n        );\n\n        const querySnapshot = await getDocs(usernameQuery);\n        return !querySnapshot.empty;\n    } catch (error) {\n        console.error('Error checking username:', error);\n        throw error;\n    }\n}\n\n/**\n * Creates a user profile in Firestore\n * @param uid User's Firebase Auth UID\n * @param profile User profile data\n */\nexport async function createUserProfile(uid: string, profile: Omit<UserProfile, 'uid' | 'createdAt'>): Promise<void> {\n    try {\n        // First check if this user ID already has a profile\n        const existingUserProfile = await getUserProfile(uid);\n        if (existingUserProfile) {\n            console.log('User profile already exists, updating instead of creating');\n\n            // Update existing profile\n            const userRef = doc(db, 'users', uid);\n            await updateDoc(userRef, {\n                firstName: profile.firstName,\n                lastName: profile.lastName,\n                username: profile.username.toLowerCase(),\n                email: profile.email.toLowerCase(),\n                bio: profile.bio || existingUserProfile.bio || ''\n            });\n\n            // Update the user's display name in Firebase Auth\n            if (auth.currentUser) {\n                await updateProfile(auth.currentUser, {\n                    displayName: profile.username\n                });\n            }\n\n            return;\n        }\n\n        // Check if email already exists in another profile\n        const emailQuery = query(\n            collection(db, 'users'),\n            where('email', '==', profile.email.toLowerCase())\n        );\n\n        const emailQuerySnapshot = await getDocs(emailQuery);\n        if (!emailQuerySnapshot.empty) {\n            throw new Error('Email is already associated with another account');\n        }\n\n        // Check if the username is already taken\n        const usernameTaken = await isUsernameTaken(profile.username);\n        if (usernameTaken) {\n            throw new Error('Username is already taken');\n        }\n\n        const userRef = doc(db, 'users', uid);\n\n        // Create the user profile\n        await setDoc(userRef, {\n            uid,\n            firstName: profile.firstName,\n            lastName: profile.lastName,\n            username: profile.username.toLowerCase(),\n            email: profile.email.toLowerCase(),\n            bio: profile.bio || '',\n            createdAt: serverTimestamp()\n        });\n\n        // Update the user's display name in Firebase Auth\n        if (auth.currentUser) {\n            await updateProfile(auth.currentUser, {\n                displayName: profile.username\n            });\n        }\n    } catch (error) {\n        console.error('Error creating user profile:', error);\n        throw error;\n    }\n}\n\n/**\n * Gets a user's profile from Firestore\n * @param uid User's Firebase Auth UID\n * @returns A promise that resolves to the user's profile or null if not found\n */\nexport async function getUserProfile(uid: string): Promise<UserProfile | null> {\n    try {\n        const userRef = doc(db, 'users', uid);\n        const userDoc = await getDoc(userRef);\n\n        if (userDoc.exists()) {\n            return userDoc.data() as UserProfile;\n        }\n\n        return null;\n    } catch (error) {\n        console.error('Error fetching user profile:', error);\n        throw error;\n    }\n}\n\n/**\n * Gets a user's profile from Firestore based on their email\n * @param email User's email address\n * @returns A promise that resolves to the user's profile or null if not found\n */\nexport async function getUserProfileByEmail(email: string): Promise<UserProfile | null> {\n    if (!email) return null;\n    try {\n        const emailQuery = query(\n            collection(db, 'users'),\n            where('email', '==', email.toLowerCase()),\n            limit(1)\n        );\n        const querySnapshot = await getDocs(emailQuery);\n        if (!querySnapshot.empty) {\n            // Should only be one user with a unique email\n            return querySnapshot.docs[0].data() as UserProfile;\n        }\n        return null;\n    } catch (error) {\n        console.error('Error fetching user profile by email:', error);\n        throw error; // Re-throw to be handled by the caller\n    }\n}\n\n/**\n * Updates a user's bio\n * @param uid User's Firebase Auth UID\n * @param bio User's new bio\n * @returns A promise that resolves when the bio is updated\n */\nexport async function updateUserBio(uid: string, bio: string): Promise<void> {\n    try {\n        const userRef = doc(db, 'users', uid);\n        await updateDoc(userRef, {\n            bio\n        });\n    } catch (error) {\n        console.error('Error updating user bio:', error);\n        throw error;\n    }\n}\n\n/**\n * Updates a user's selected interests\n * @param uid User's Firebase Auth UID\n * @param interests Array of selected interests\n * @returns A promise that resolves when the interests are updated\n */\nexport async function updateUserInterests(uid: string, interests: string[]): Promise<void> {\n    try {\n        const userRef = doc(db, 'users', uid);\n        await updateDoc(userRef, {\n            interests\n        });\n        console.log(`Interests updated for user ${uid}:`, interests);\n    } catch (error) {\n        console.error('Error updating user interests:', error);\n        throw error;\n    }\n}\n\n/**\n * Search for users by username or name\n * @param searchTerm The search term to find users\n * @returns Array of matching users\n */\nexport async function searchUsers(searchTerm: string): Promise<UserProfile[]> {\n    try {\n        if (!searchTerm || searchTerm.trim().length < 2) {\n            return [];\n        }\n\n        const searchTermLower = searchTerm.toLowerCase().trim();\n\n        // Create a query to find users whose username contains the search term\n        const usersRef = collection(db, 'users');\n        const usersSnapshot = await getDocs(usersRef);\n\n        // Filter users locally since Firestore doesn't support contains or regexp queries directly\n        const matchingUsers = usersSnapshot.docs\n            .map(doc => {\n                // Get all data from the document and ensure it has the correct UserProfile shape\n                const userData = doc.data() as UserProfile;\n                return userData;\n            })\n            .filter(user => {\n                const usernameLower = user.username.toLowerCase();\n                const firstNameLower = user.firstName.toLowerCase();\n                const lastNameLower = user.lastName.toLowerCase();\n                const fullNameLower = `${firstNameLower} ${lastNameLower}`;\n\n                return usernameLower.includes(searchTermLower) ||\n                    firstNameLower.includes(searchTermLower) ||\n                    lastNameLower.includes(searchTermLower) ||\n                    fullNameLower.includes(searchTermLower);\n            });\n\n        return matchingUsers;\n    } catch (error) {\n        console.error('Error searching users:', error);\n        return [];\n    }\n}\n\n/**\n * Follows a user\n * @param followerUid UID of the user who wants to follow\n * @param followingUid UID of the user to be followed\n * @returns A promise that resolves when the follow relationship is created\n */\nexport async function followUser(followerUid: string, followingUid: string): Promise<void> {\n    try {\n        // Don't allow users to follow themselves\n        if (followerUid === followingUid) {\n            throw new Error('You cannot follow yourself');\n        }\n\n        // Update the follower's following list\n        const followerRef = doc(db, 'users', followerUid);\n        await updateDoc(followerRef, {\n            following: arrayUnion(followingUid),\n            followingCount: increment(1)\n        });\n\n        // Update the following's followers list\n        const followingRef = doc(db, 'users', followingUid);\n        await updateDoc(followingRef, {\n            followers: arrayUnion(followerUid),\n            followersCount: increment(1)\n        });\n\n        // Get the follower's profile to use their name for the notification\n        const followerDoc = await getDoc(followerRef);\n        if (followerDoc.exists()) {\n            const followerData = followerDoc.data() as UserProfile;\n            // Create a notification for the user being followed\n            await createFollowNotification(\n                followingUid,\n                `${followerData.firstName} ${followerData.lastName}`,\n                followerUid,\n                followerData.username\n            );\n        }\n    } catch (error) {\n        console.error('Error following user:', error);\n        throw error;\n    }\n}\n\n/**\n * Unfollows a user\n * @param followerUid UID of the user who wants to unfollow\n * @param followingUid UID of the user to be unfollowed\n * @returns A promise that resolves when the follow relationship is removed\n */\nexport async function unfollowUser(followerUid: string, followingUid: string): Promise<void> {\n    try {\n        // Update the follower's following list\n        const followerRef = doc(db, 'users', followerUid);\n        await updateDoc(followerRef, {\n            following: arrayRemove(followingUid),\n            followingCount: increment(-1)\n        });\n\n        // Update the following's followers list\n        const followingRef = doc(db, 'users', followingUid);\n        await updateDoc(followingRef, {\n            followers: arrayRemove(followerUid),\n            followersCount: increment(-1)\n        });\n    } catch (error) {\n        console.error('Error unfollowing user:', error);\n        throw error;\n    }\n}\n\n/**\n * Checks if a user is following another user\n * @param followerUid UID of the potential follower\n * @param followingUid UID of the user who might be followed\n * @returns Promise resolving to a boolean indicating if follower follows following\n */\nexport async function isFollowing(followerUid: string, followingUid: string): Promise<boolean> {\n    try {\n        const followerRef = doc(db, 'users', followerUid);\n        const followerDoc = await getDoc(followerRef);\n\n        if (!followerDoc.exists()) {\n            return false;\n        }\n\n        const userData = followerDoc.data() as UserProfile;\n        return userData.following?.includes(followingUid) || false;\n    } catch (error) {\n        console.error('Error checking follow status:', error);\n        throw error;\n    }\n}\n\n/**\n * Gets a list of users that a user is following\n * @param uid User's Firebase Auth UID\n * @param maxLimit Maximum number of results to return\n * @returns Promise resolving to an array of user profiles\n */\nexport async function getFollowing(uid: string, maxLimit = 50): Promise<UserProfile[]> {\n    try {\n        // First get the user to access their following list\n        const userRef = doc(db, 'users', uid);\n        const userDoc = await getDoc(userRef);\n\n        if (!userDoc.exists()) {\n            return [];\n        }\n\n        const userData = userDoc.data() as UserProfile;\n        const followingList = userData.following || [];\n\n        if (followingList.length === 0) {\n            return [];\n        }\n\n        // Fetch each following user's profile\n        const followingUsers: UserProfile[] = [];\n        const batchLimit = Math.min(followingList.length, maxLimit);\n\n        for (let i = 0; i < batchLimit; i++) {\n            const followingId = followingList[i];\n            const followingUserRef = doc(db, 'users', followingId);\n            const followingUserDoc = await getDoc(followingUserRef);\n\n            if (followingUserDoc.exists()) {\n                followingUsers.push(followingUserDoc.data() as UserProfile);\n            }\n        }\n\n        return followingUsers;\n    } catch (error) {\n        console.error('Error getting following list:', error);\n        throw error;\n    }\n}\n\n/**\n * Gets a list of users following a user\n * @param uid User's Firebase Auth UID\n * @param maxLimit Maximum number of results to return\n * @returns Promise resolving to an array of user profiles\n */\nexport async function getFollowers(uid: string, maxLimit = 50): Promise<UserProfile[]> {\n    try {\n        // First get the user to access their followers list\n        const userRef = doc(db, 'users', uid);\n        const userDoc = await getDoc(userRef);\n\n        if (!userDoc.exists()) {\n            return [];\n        }\n\n        const userData = userDoc.data() as UserProfile;\n        const followersList = userData.followers || [];\n\n        if (followersList.length === 0) {\n            return [];\n        }\n\n        // Fetch each follower's profile\n        const followers: UserProfile[] = [];\n        const batchLimit = Math.min(followersList.length, maxLimit);\n\n        for (let i = 0; i < batchLimit; i++) {\n            const followerId = followersList[i];\n            const followerUserRef = doc(db, 'users', followerId);\n            const followerUserDoc = await getDoc(followerUserRef);\n\n            if (followerUserDoc.exists()) {\n                followers.push(followerUserDoc.data() as UserProfile);\n            }\n        }\n\n        return followers;\n    } catch (error) {\n        console.error('Error getting followers list:', error);\n        throw error;\n    }\n}\n\n/**\n * Deletes a user's account from Firebase Authentication and their profile from Firestore.\n * IMPORTANT: Deleting a user from Firebase Auth requires recent sign-in. \n * If this operation fails due to 'auth/requires-recent-login', \n * the client-side must handle re-authentication before retrying.\n * @param uid User's Firebase Auth UID\n * @returns A promise that resolves when the account and profile are deleted.\n */\nexport async function deleteUserAccount(uid: string): Promise<void> {\n    try {\n        // 1. Delete user profile from Firestore\n        const userProfileRef = doc(db, 'users', uid);\n        await deleteDoc(userProfileRef);\n        console.log(`User profile for UID ${uid} deleted from Firestore.`);\n\n        // 2. Delete user from Firebase Authentication\n        // This requires the current user to be the one being deleted.\n        // And the user must have signed in recently.\n        const currentUser = auth.currentUser;\n        if (currentUser && currentUser.uid === uid) {\n            await deleteFirebaseAuthUser(currentUser);\n            console.log(`User account for UID ${uid} deleted from Firebase Authentication.`);\n        } else if (!currentUser) {\n            console.error('No current user authenticated. Cannot delete Firebase Auth user.');\n            throw new Error('Authentication required to delete account.');\n        } else {\n            // This case (currentUser.uid !== uid) should ideally not happen if the function\n            // is called correctly from the client for the logged-in user.\n            console.error('Current authenticated user does not match UID to be deleted.');\n            throw new Error('Mismatch between authenticated user and account to be deleted.');\n        }\n\n    } catch (error: any) {\n        console.error('Error deleting user account:', error);\n        // Specific check for re-authentication requirement\n        if (error.code === 'auth/requires-recent-login') {\n            throw new Error('This operation is sensitive and requires recent authentication. Please sign out and sign back in, then try again.');\n        }\n        throw new Error('Failed to delete user account. ' + error.message);\n    }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 618, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/app/settings/page.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport Link from 'next/link';\nimport { auth } from '../../firebase/clientApp';\nimport { onAuthStateChanged, User, signOut } from 'firebase/auth';\nimport { updateUserInterests, getUserProfile, UserProfile, isUsernameTaken, createUserProfile, deleteUserAccount } from '../../services/userService';\n\n// Consistent list of interests (can be moved to a shared constants file later)\nconst ALL_INTERESTS = [\n  'Technology', 'Science', 'Art & Design', 'Books & Literature', 'Travel',\n  'Food & Cooking', 'Health & Wellness', 'Sports', 'Music', 'Movies & TV',\n  'Gaming', 'Fashion', 'Business & Finance', 'History', 'Politics', 'Photography'\n];\n\nexport default function SettingsPage() {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  \n  // States for Interest Management\n  const [selectedInterests, setSelectedInterests] = useState<string[]>([]);\n  const [isSubmittingInterests, setIsSubmittingInterests] = useState(false);\n  \n  // States for Profile Information Management\n  const [firstName, setFirstName] = useState('');\n  const [lastName, setLastName] = useState('');\n  const [username, setUsername] = useState('');\n  const [bio, setBio] = useState('');\n  const [isCheckingUsername, setIsCheckingUsername] = useState(false);\n  const [usernameAvailable, setUsernameAvailable] = useState<boolean | null>(null);\n  const [isSubmittingProfile, setIsSubmittingProfile] = useState(false);\n  const [profileTouchedFields, setProfileTouchedFields] = useState<Record<string, boolean>>({});\n  const [profileValidation, setProfileValidation] = useState<Record<string, string>>({});\n\n  // State for Delete Account Modal\n  const [showDeleteConfirmModal, setShowDeleteConfirmModal] = useState(false);\n  const [isDeletingAccount, setIsDeletingAccount] = useState(false);\n\n  // General Page States\n  const [isLoadingPage, setIsLoadingPage] = useState(true);\n  const [error, setError] = useState(''); // General errors for the page or interest section\n  const [profileError, setProfileError] = useState(''); // Specific errors for profile section\n  const [successMessage, setSuccessMessage] = useState(''); // For interest updates\n  const [profileSuccessMessage, setProfileSuccessMessage] = useState(''); // For profile updates\n  \n  const router = useRouter();\n\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      if (user) {\n        setCurrentUser(user);\n        try {\n          const profile = await getUserProfile(user.uid);\n          if (profile) {\n            setUserProfile(profile);\n            // Populate interest states\n            setSelectedInterests(profile.interests || []);\n            // Populate profile info states\n            setFirstName(profile.firstName || '');\n            setLastName(profile.lastName || '');\n            setUsername(profile.username || '');\n            setBio(profile.bio || '');\n            if (profile.username) {\n              // Initial check for existing username (it should be available as it's theirs)\n              checkUsernameAvailability(profile.username, true);\n            }\n          } else {\n            setError('Could not load your profile. Please try again.');\n          }\n        } catch (err) {\n          console.error(\"Error fetching profile:\", err);\n          setError('Failed to load profile data.');\n        }\n      } else {\n        router.push('/login');\n      }\n      setIsLoadingPage(false);\n    });\n    return () => unsubscribe();\n  }, [router]);\n\n  // --- Interest Management Logic ---\n  const toggleInterest = (interest: string) => {\n    setSuccessMessage(''); \n    setError('');\n    setSelectedInterests(prev =>\n      prev.includes(interest)\n        ? prev.filter(i => i !== interest)\n        : [...prev, interest]\n    );\n  };\n\n  const handleInterestsSubmit = async () => {\n    if (!currentUser) {\n      setError('User not authenticated. Please log in again.');\n      return;\n    }\n    if (selectedInterests.length < 3) {\n      setError('Please select at least 3 interests.');\n      setSuccessMessage('');\n      return;\n    }\n    setIsSubmittingInterests(true);\n    setError('');\n    setSuccessMessage('');\n    try {\n      await updateUserInterests(currentUser.uid, selectedInterests);\n      setSuccessMessage('Your interests have been updated successfully!');\n      if(userProfile) setUserProfile({...userProfile, interests: selectedInterests });\n    } catch (err) {\n      console.error('Failed to update interests:', err);\n      setError('Failed to update interests. Please try again.');\n    } finally {\n      setIsSubmittingInterests(false);\n    }\n  };\n\n  // --- Profile Information Management Logic ---\n  const checkUsernameAvailability = async (currentUsername: string, isInitialLoad = false) => {\n    if (currentUsername.length < 2) {\n      setUsernameAvailable(null);\n      return;\n    }\n    setIsCheckingUsername(true);\n    try {\n      const taken = await isUsernameTaken(currentUsername);\n      // If it's the initial load and the username is the user's current one, it's considered \"available\" for them.\n      // Otherwise (or if it's not their current username), it's available if not taken by someone else.\n      if (isInitialLoad && userProfile && currentUsername === userProfile.username) {\n        setUsernameAvailable(true);\n      } else {\n        setUsernameAvailable(!taken);\n      }\n    } catch (error) {\n      console.error('Error checking username:', error);\n      setUsernameAvailable(null); // Error state\n      setProfileError('Could not verify username. Please try again.');\n    } finally {\n      setIsCheckingUsername(false);\n    }\n  };\n\n  // Debounced username check\n  useEffect(() => {\n    // Skip if username hasn't changed from initial profile or if it's empty\n    if (!userProfile || username === userProfile.username || username.length < 2) {\n        if(username.length < 2 && username !== (userProfile?.username || '')) setUsernameAvailable(null);\n        return;\n    }\n    const handler = setTimeout(() => {\n        checkUsernameAvailability(username);\n    }, 500);\n    return () => clearTimeout(handler);\n  }, [username, userProfile]); // Add userProfile to dependencies\n\n\n  const handleProfileInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setProfileSuccessMessage('');\n    setProfileError('');\n\n    if (name === 'firstName') setFirstName(value);\n    if (name === 'lastName') setLastName(value);\n    if (name === 'username') setUsername(value);\n    if (name === 'bio') setBio(value);\n\n    setProfileTouchedFields({ ...profileTouchedFields, [name]: true });\n    // Basic required validation on change for immediate feedback if desired, or keep for blur/submit\n    if (!value.trim() && (name === 'firstName' || name === 'lastName' || name ==='username')) {\n        setProfileValidation({ ...profileValidation, [name]: `Your ${name.replace(/([A-Z])/g, ' $1').toLowerCase()} is required.` });\n    } else {\n        const newValidation = { ...profileValidation };\n        delete newValidation[name];\n        setProfileValidation(newValidation);\n    }\n  };\n  \n  const handleProfileBlur = (e: React.FocusEvent<HTMLInputElement | HTMLTextAreaElement>) => {\n    const { name, value } = e.target;\n    setProfileTouchedFields({ ...profileTouchedFields, [name]: true });\n    if (!value.trim() && (name === 'firstName' || name === 'lastName' || name ==='username')) {\n      setProfileValidation({ ...profileValidation, [name]: `Your ${name.replace(/([A-Z])/g, ' $1').toLowerCase()} is required.` });\n    } else if (name === 'username' && value.length < 2) {\n      setProfileValidation({ ...profileValidation, [name]: 'Username must be at least 2 characters.' });\n    } else {\n      const newValidation = { ...profileValidation };\n      delete newValidation[name];\n      setProfileValidation(newValidation);\n    }\n  };\n\n  const validateProfileForm = (): boolean => {\n    const errors: Record<string, string> = {};\n    let isValid = true;\n    if (!firstName.trim()) { errors.firstName = 'First name is required.'; isValid = false; }\n    if (!lastName.trim()) { errors.lastName = 'Last name is required.'; isValid = false; }\n    if (!username.trim()) { \n        errors.username = 'Username is required.'; \n        isValid = false; \n    } else if (username.length < 2) {\n        errors.username = 'Username must be at least 2 characters.';\n        isValid = false;\n    } else if (usernameAvailable === false && username !== userProfile?.username) { // only error if username is taken AND it's not their current one\n        errors.username = 'This username is already taken.';\n        isValid = false;\n    }\n    // Bio is optional, no validation needed unless specific rules apply (e.g., length)\n    setProfileValidation(errors);\n    // Mark all as touched to show errors\n    setProfileTouchedFields({ firstName: true, lastName: true, username: true, bio: true });\n    return isValid;\n  };\n\n  const handleProfileSubmit = async () => {\n    if (!currentUser || !userProfile) {\n      setProfileError('User data not available. Please try again.');\n      return;\n    }\n    if (!validateProfileForm()) {\n      return;\n    }\n    setIsSubmittingProfile(true);\n    setProfileError('');\n    setProfileSuccessMessage('');\n    try {\n      await createUserProfile(currentUser.uid, {\n        // uid is not part of the Omit type, it's passed as first arg\n        firstName,\n        lastName,\n        username,\n        email: userProfile.email, // Use existing email, don't allow change here for now\n        bio,\n        interests: selectedInterests, // Pass existing interests, or they might be overwritten if not included by createUserProfile\n        // Ensure createUserProfile handles existing fields like followers, followingCount etc., correctly\n        // or fetch them and pass them if the function expects the full profile minus uid/createdAt for an update.\n        // For now, assuming createUserProfile is smart enough for partial updates based on provided fields.\n      });\n      setProfileSuccessMessage('Profile information updated successfully!');\n      // Update local userProfile state to reflect changes immediately\n      setUserProfile(prev => prev ? { ...prev, firstName, lastName, username, bio } : null);\n    } catch (err: any) {\n      console.error('Failed to update profile:', err);\n      if (err.message?.includes('Username is already taken')) {\n        setProfileValidation({...profileValidation, username: 'This username is already taken.'});\n        setProfileError('This username is already taken. Please choose another.');\n      } else {\n        setProfileError('Failed to update profile information. Please try again.');\n      }\n    } finally {\n      setIsSubmittingProfile(false);\n    }\n  };\n  \n  // --- Input Styling --- (Can be refactored into a shared utility if used on more pages)\n  const getInputClasses = (fieldName: string, errorState: boolean, availableState: boolean | null = null) => {\n    const baseClasses = \"w-full px-4 py-3 bg-white border border-neutral-300 rounded-lg shadow-sm transition-colors duration-200 ease-in-out focus:outline-none focus:ring-2 focus:ring-offset-1 focus:ring-amber-500 focus:border-amber-500 placeholder-neutral-400 text-neutral-700\";\n    if (errorState) {\n      return `${baseClasses} border-red-400 focus:ring-red-400 focus:border-red-400 bg-red-50 text-red-700 placeholder-red-400`;\n    }\n    if (fieldName === 'username' && username.length >= 2 && availableState === true) {\n      return `${baseClasses} border-green-400 focus:ring-green-400 focus:border-green-400 bg-green-50 text-green-700 placeholder-green-400`;\n    }\n    return `${baseClasses} hover:border-neutral-400`;\n  };\n\n  // --- Delete Account Logic ---\n  const handleDeleteAccountClick = () => {\n    setProfileError(''); // Clear other errors\n    setError('');\n    setShowDeleteConfirmModal(true);\n  };\n\n  const handleCancelDelete = () => {\n    setShowDeleteConfirmModal(false);\n  };\n\n  const handleConfirmDelete = async () => {\n    if (!currentUser) {\n      setError(\"User not authenticated. Please re-login.\");\n      setShowDeleteConfirmModal(false);\n      return;\n    }\n    setIsDeletingAccount(true);\n    setError(''); // Clear previous errors\n    setProfileError('');\n\n    try {\n      await deleteUserAccount(currentUser.uid);\n      // If successful, sign out the user and redirect\n      await signOut(auth);\n      router.push('/login?accountDeleted=true'); \n    } catch (err: any) {\n      console.error(\"Failed to delete account:\", err);\n      // Display specific error messages to the user\n      if (err.message.includes('requires recent authentication')) {\n        setError(\"This action requires you to have signed in recently. Please sign out, sign back in, and try again.\");\n      } else {\n        setError(\"Failed to delete your account. Please try again or contact support.\");\n      }\n    } finally {\n      setIsDeletingAccount(false);\n      // Keep modal open if error, otherwise it will close upon navigation\n      if (error) { // Check if error was set in the catch block\n        // setShowDeleteConfirmModal(true); // User might want to keep it open on error\n      } else {\n        setShowDeleteConfirmModal(false); // Close on success if not navigating away\n      }\n    }\n  };\n\n  // --- Render Logic --- \n  if (isLoadingPage) {\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-stone-100 to-amber-100 flex items-center justify-center font-sans\">\n        <div className=\"animate-spin h-10 w-10 border-4 border-amber-500 rounded-full border-t-transparent\"></div>\n      </div>\n    );\n  }\n  \n  if (!currentUser || !userProfile) {\n     // Handles cases where user is null after load or profile failed to load but auth check passed\n    return (\n      <div className=\"min-h-screen bg-gradient-to-br from-stone-100 to-amber-100 flex flex-col items-center justify-center p-4 font-sans\">\n        <p className=\"text-red-600\">{error || 'Could not load user data. Please try refreshing.'}</p>\n        <Link href=\"/\" className=\"mt-4 px-4 py-2 bg-stone-700 text-white rounded-md hover:bg-stone-600\">\n          Go to Homepage\n        </Link>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-stone-100 to-amber-100 flex flex-col items-center p-4 sm:p-6 md:p-8 font-sans relative\">\n      {/* Back to Home Link */}\n      <div className=\"absolute top-4 left-4 sm:top-6 sm:left-6 z-10\">\n        <Link href=\"/\" className=\"flex items-center text-stone-600 hover:text-amber-600 transition-colors duration-200 group\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2 transform group-hover:-translate-x-1 transition-transform duration-200\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\" />\n          </svg>\n          <span className=\"text-sm font-medium\">Back to Home</span>\n        </Link>\n      </div>\n\n      <div className=\"w-full max-w-3xl bg-white p-6 sm:p-8 md:p-10 rounded-xl shadow-2xl mt-12 sm:mt-16\">\n        <h1 className=\"text-3xl sm:text-4xl font-serif font-medium text-stone-800 mb-3 text-center\">Account Settings</h1>\n        <p className=\"text-stone-600 text-lg mb-8 md:mb-10 text-center\">Manage your preferences and profile details.</p>\n\n        {/* Profile Information Section */}\n        <section id=\"profile-info\" className=\"mb-12\">\n          <h2 className=\"text-xl sm:text-2xl font-semibold text-stone-700 mb-2\">Profile Information</h2>\n          <p className=\"text-stone-500 text-sm mb-6\">Update your name, username, and bio.</p>\n          \n          <form onSubmit={(e) => { e.preventDefault(); handleProfileSubmit(); }} className=\"space-y-5\" noValidate>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-5\">\n              <div>\n                <label htmlFor=\"firstName\" className=\"block text-sm font-medium text-stone-600 mb-1\">First Name</label>\n                <input\n                  id=\"firstName\"\n                  name=\"firstName\"\n                  type=\"text\"\n                  value={firstName}\n                  onChange={handleProfileInputChange}\n                  onBlur={handleProfileBlur}\n                  className={getInputClasses('firstName', !!profileValidation.firstName)}\n                  required\n                />\n                {profileTouchedFields.firstName && profileValidation.firstName && (\n                  <p className=\"mt-1 text-xs text-red-500\">{profileValidation.firstName}</p>\n                )}\n              </div>\n              <div>\n                <label htmlFor=\"lastName\" className=\"block text-sm font-medium text-stone-600 mb-1\">Last Name</label>\n                <input\n                  id=\"lastName\"\n                  name=\"lastName\"\n                  type=\"text\"\n                  value={lastName}\n                  onChange={handleProfileInputChange}\n                  onBlur={handleProfileBlur}\n                  className={getInputClasses('lastName', !!profileValidation.lastName)}\n                  required\n                />\n                {profileTouchedFields.lastName && profileValidation.lastName && (\n                  <p className=\"mt-1 text-xs text-red-500\">{profileValidation.lastName}</p>\n                )}\n              </div>\n            </div>\n\n            <div>\n              <label htmlFor=\"username\" className=\"block text-sm font-medium text-stone-600 mb-1\">Username</label>\n              <div className=\"relative\">\n                <input\n                  id=\"username\"\n                  name=\"username\"\n                  type=\"text\"\n                  value={username}\n                  onChange={handleProfileInputChange}\n                  onBlur={handleProfileBlur}\n                  className={getInputClasses('username', !!profileValidation.username, usernameAvailable)}\n                  required\n                />\n                {isCheckingUsername && (\n                  <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2\">\n                    <div className=\"animate-spin h-4 w-4 border-2 border-stone-400 rounded-full border-t-transparent\"></div>\n                  </div>\n                )}\n                {!isCheckingUsername && username.length >= 2 && usernameAvailable === true && username !== userProfile?.username && (\n                  <div className=\"absolute right-3 top-1/2 transform -translate-y-1/2 text-green-500\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\"><path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" /></svg>\n                  </div>\n                )}\n              </div>\n              {profileTouchedFields.username && profileValidation.username && (\n                <p className=\"mt-1 text-xs text-red-500\">{profileValidation.username}</p>\n              )}\n              {!profileValidation.username && username.length >= 2 && usernameAvailable === true && username !== userProfile?.username && (\n                <p className=\"mt-1 text-xs text-green-500\">Username is available</p>\n              )}\n              {!profileValidation.username && username.length >= 2 && usernameAvailable === false && username !== userProfile?.username && (\n                <p className=\"mt-1 text-xs text-red-500\">Username is already taken</p>\n              )}\n            </div>\n\n            <div>\n              <label htmlFor=\"bio\" className=\"block text-sm font-medium text-stone-600 mb-1\">Bio</label>\n              <textarea\n                id=\"bio\"\n                name=\"bio\"\n                rows={3}\n                value={bio}\n                onChange={handleProfileInputChange}\n                onBlur={handleProfileBlur}\n                className={getInputClasses('bio', !!profileValidation.bio)}\n                placeholder=\"Tell us a little about yourself...\"\n              />\n              {profileTouchedFields.bio && profileValidation.bio && (\n                <p className=\"mt-1 text-xs text-red-500\">{profileValidation.bio}</p>\n              )}\n            </div>\n\n            {profileError && (\n              <p className=\"my-2 p-3 bg-red-100 text-red-700 text-sm rounded-lg border border-red-200 animate-fadeIn text-center\">\n                {profileError}\n              </p>\n            )}\n            {profileSuccessMessage && (\n              <p className=\"my-2 p-3 bg-green-100 text-green-700 text-sm rounded-lg border border-green-200 animate-fadeIn text-center\">\n                {profileSuccessMessage}\n              </p>\n            )}\n\n            <div className=\"flex justify-end\">\n              <button\n                type=\"submit\"\n                className=\"px-6 py-2.5 bg-stone-800 text-white rounded-lg shadow-md hover:bg-stone-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 transition-all duration-200 ease-in-out transform hover:scale-[1.01] active:scale-[0.99] disabled:opacity-70 disabled:cursor-not-allowed\"\n                disabled={isSubmittingProfile}\n              >\n                {isSubmittingProfile ? (\n                  <>\n                    <svg className=\"animate-spin -ml-1 mr-2 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Saving Profile...\n                  </>\n                ) : (\n                  'Save Profile Changes'\n                )}\n              </button>\n            </div>\n          </form>\n        </section>\n        \n        <hr className=\"my-10 border-stone-300\" />\n\n        {/* Interests Section */}\n        <section id=\"interests\" className=\"mt-8\">\n            <h2 className=\"text-xl sm:text-2xl font-semibold text-stone-700 mb-2\">Your Interests</h2>\n            <p className=\"text-stone-500 text-sm mb-6\">Select topics that you care about to help us personalize your experience. Choose at least 3.</p>\n            \n            <div className=\"flex flex-wrap justify-center gap-3 sm:gap-4 mb-8\">\n            {ALL_INTERESTS.map(interest => (\n                <button\n                key={interest}\n                className={`\n                    px-5 py-2.5 sm:px-6 sm:py-3 rounded-full text-sm sm:text-base font-medium transition-all duration-200 ease-in-out transform focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 \n                    ${selectedInterests.includes(interest)\n                    ? 'bg-amber-500 text-white shadow-md scale-105' \n                    : 'bg-white text-stone-700 border border-stone-300 hover:bg-stone-50 hover:border-stone-400 hover:shadow-sm active:scale-95'\n                    }`}\n                onClick={() => toggleInterest(interest)}\n                >\n                {interest}\n                </button>\n            ))}\n            </div>\n            \n            {error && (\n            <p className=\"my-4 p-3 bg-red-100 text-red-700 text-sm rounded-lg border border-red-200 animate-fadeIn text-center\">\n                {error} {/* This error state is for interest section errors */}\n            </p>\n            )}\n            {successMessage && (\n                <p className=\"my-4 p-3 bg-green-100 text-green-700 text-sm rounded-lg border border-green-200 animate-fadeIn text-center\">\n                {successMessage} {/* This successMessage is for interest section */}\n                </p>\n            )}\n            \n            <div className=\"flex justify-center\">\n                <button \n                className=\"w-full max-w-xs flex items-center justify-center px-6 py-3.5 bg-stone-800 text-white rounded-lg shadow-md hover:bg-stone-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-amber-500 transition-all duration-200 ease-in-out transform hover:scale-[1.01] active:scale-[0.99] disabled:opacity-70 disabled:cursor-not-allowed\"\n                onClick={handleInterestsSubmit} // Renamed from handleSubmit\n                disabled={isSubmittingInterests || selectedInterests.length < 3}\n                >\n                {isSubmittingInterests ? (\n                    <>\n                    <svg className=\"animate-spin -ml-1 mr-3 h-5 w-5 text-white\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                        <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                        <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Saving Interests...\n                    </>\n                ) : (\n                    'Save Interest Changes' // Clarified button text\n                )}\n                </button>\n            </div>\n        </section>\n\n        <hr className=\"my-10 border-stone-300\" />\n        <section id=\"account-management\">\n            <h2 className=\"text-xl sm:text-2xl font-semibold text-stone-700 mb-4\">Account Management</h2>\n            <p className=\"text-stone-600 text-sm mb-6\">Manage your account settings or take critical actions.</p>\n            \n            <div className=\"space-y-4\">\n              <div>\n                <h3 className=\"text-md font-medium text-stone-700\">Change Email or Password</h3>\n                <p className=\"text-xs text-stone-500 mb-2\">Functionality to update your email or password will be available here soon.</p>\n                {/* Placeholder for future inputs/buttons */}\n              </div>\n\n              <div>\n                <h3 className=\"text-md font-medium text-red-600\">Delete Account</h3>\n                <p className=\"text-xs text-stone-500 mb-3\">Permanently delete your account and all associated data. This action cannot be undone.</p>\n                <button \n                  onClick={handleDeleteAccountClick}\n                  className=\"px-5 py-2.5 bg-red-600 text-white rounded-lg shadow-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-all duration-200 ease-in-out transform hover:scale-[1.01] active:scale-[0.99] disabled:opacity-70\"\n                  disabled={isSubmittingInterests || isSubmittingProfile || isLoadingPage}\n                >\n                  Delete My Account\n                </button>\n              </div>\n            </div>\n        </section>\n      </div>\n\n      {/* Delete Account Confirmation Modal */}\n      {showDeleteConfirmModal && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-60 backdrop-blur-sm flex items-center justify-center p-4 z-50 animate-fadeIn\">\n          <div className=\"bg-white p-6 sm:p-8 rounded-xl shadow-2xl w-full max-w-md transform transition-all duration-300 ease-out scale-100 opacity-100\">\n            <h3 className=\"text-2xl font-semibold text-stone-800 mb-4 text-center\">Confirm Account Deletion</h3>\n            <p className=\"text-stone-600 mb-1 text-center\">Are you absolutely sure you want to delete your account?</p>\n            <p className=\"text-sm text-red-600 mb-6 text-center font-medium\">This action is permanent and cannot be undone. All your data, including articles, profile information, and interactions, will be removed.</p>\n            \n            {error && ( // Display errors specific to deletion process within the modal\n              <p className=\"my-3 p-2.5 bg-red-100 text-red-700 text-sm rounded-md border border-red-200 text-center\">\n                {error}\n              </p>\n            )}\n\n            <div className=\"flex flex-col sm:flex-row justify-center gap-3 sm:gap-4 mt-6\">\n              <button\n                onClick={handleCancelDelete}\n                disabled={isDeletingAccount}\n                className=\"w-full sm:w-auto px-6 py-3 bg-stone-200 text-stone-700 rounded-lg hover:bg-stone-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-stone-400 transition-colors duration-200 ease-in-out order-2 sm:order-1\"\n              >\n                Cancel\n              </button>\n              <button\n                onClick={handleConfirmDelete}\n                disabled={isDeletingAccount}\n                className=\"w-full sm:w-auto px-6 py-3 bg-red-600 text-white rounded-lg shadow-md hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500 transition-all duration-200 ease-in-out order-1 sm:order-2 disabled:opacity-70\"\n              >\n                {isDeletingAccount ? (\n                  <>\n                    <svg className=\"animate-spin -ml-1 mr-2 h-5 w-5 text-white inline\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n                      <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n                      <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n                    </svg>\n                    Deleting...\n                  </>\n                ) : (\n                  'Yes, Delete My Account'\n                )}\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}
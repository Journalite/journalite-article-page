{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 124, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/lib/cloudinary-server.ts"],"sourcesContent":["import { v2 as cloudinary } from 'cloudinary';\n\n// Configure Cloudinary (server-side only)\ncloudinary.config({\n    cloud_name: process.env.NEXT_PUBLIC_CLOUDINARY_CLOUD_NAME,\n    api_key: process.env.CLOUDINARY_API_KEY,\n    api_secret: process.env.CLOUDINARY_API_SECRET,\n});\n\nexport default cloudinary;\n\n// Server-side helper function for uploading from URL\nexport const uploadImageFromUrl = async (imageUrl: string): Promise<string> => {\n    try {\n        const result = await cloudinary.uploader.upload(imageUrl, {\n            folder: 'journalite-articles',\n            transformation: [\n                { width: 1200, height: 800, crop: 'limit' },\n                { quality: 'auto' },\n                { format: 'auto' }\n            ]\n        });\n        return result.secure_url;\n    } catch (error) {\n        console.error('Error uploading image from URL:', error);\n        throw error;\n    }\n}; "],"names":[],"mappings":";;;;AAAA;;AAEA,0CAA0C;AAC1C,0IAAA,CAAA,KAAU,CAAC,MAAM,CAAC;IACd,UAAU;IACV,SAAS,QAAQ,GAAG,CAAC,kBAAkB;IACvC,YAAY,QAAQ,GAAG,CAAC,qBAAqB;AACjD;uCAEe,0IAAA,CAAA,KAAU;AAGlB,MAAM,qBAAqB,OAAO;IACrC,IAAI;QACA,MAAM,SAAS,MAAM,0IAAA,CAAA,KAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,UAAU;YACtD,QAAQ;YACR,gBAAgB;gBACZ;oBAAE,OAAO;oBAAM,QAAQ;oBAAK,MAAM;gBAAQ;gBAC1C;oBAAE,SAAS;gBAAO;gBAClB;oBAAE,QAAQ;gBAAO;aACpB;QACL;QACA,OAAO,OAAO,UAAU;IAC5B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,mCAAmC;QACjD,MAAM;IACV;AACJ","debugId":null}},
    {"offset": {"line": 167, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/app/api/upload/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from 'next/server'\nimport cloudinary from '@/lib/cloudinary-server'\n\nexport async function POST(request: NextRequest) {\n    try {\n        const formData = await request.formData()\n        const file = formData.get('file') as File\n\n        if (!file) {\n            return NextResponse.json({ error: 'No file provided' }, { status: 400 })\n        }\n\n        // Convert file to buffer\n        const bytes = await file.arrayBuffer()\n        const buffer = Buffer.from(bytes)\n\n        // Upload to Cloudinary\n        const result = await new Promise((resolve, reject) => {\n            cloudinary.uploader.upload_stream(\n                {\n                    resource_type: 'auto',\n                    folder: 'journalite-articles',\n                    transformation: [\n                        { width: 1200, height: 800, crop: 'limit' },\n                        { quality: 'auto' },\n                        { format: 'auto' }\n                    ]\n                },\n                (error, result) => {\n                    if (error) reject(error)\n                    else resolve(result)\n                }\n            ).end(buffer)\n        })\n\n        return NextResponse.json(result)\n    } catch (error) {\n        console.error('Upload error:', error)\n        return NextResponse.json(\n            { error: 'Failed to upload image' },\n            { status: 500 }\n        )\n    }\n} "],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,eAAe,KAAK,OAAoB;IAC3C,IAAI;QACA,MAAM,WAAW,MAAM,QAAQ,QAAQ;QACvC,MAAM,OAAO,SAAS,GAAG,CAAC;QAE1B,IAAI,CAAC,MAAM;YACP,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;gBAAE,OAAO;YAAmB,GAAG;gBAAE,QAAQ;YAAI;QAC1E;QAEA,yBAAyB;QACzB,MAAM,QAAQ,MAAM,KAAK,WAAW;QACpC,MAAM,SAAS,OAAO,IAAI,CAAC;QAE3B,uBAAuB;QACvB,MAAM,SAAS,MAAM,IAAI,QAAQ,CAAC,SAAS;YACvC,oIAAA,CAAA,UAAU,CAAC,QAAQ,CAAC,aAAa,CAC7B;gBACI,eAAe;gBACf,QAAQ;gBACR,gBAAgB;oBACZ;wBAAE,OAAO;wBAAM,QAAQ;wBAAK,MAAM;oBAAQ;oBAC1C;wBAAE,SAAS;oBAAO;oBAClB;wBAAE,QAAQ;oBAAO;iBACpB;YACL,GACA,CAAC,OAAO;gBACJ,IAAI,OAAO,OAAO;qBACb,QAAQ;YACjB,GACF,GAAG,CAAC;QACV;QAEA,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC7B,EAAE,OAAO,OAAO;QACZ,QAAQ,KAAK,CAAC,iBAAiB;QAC/B,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACpB;YAAE,OAAO;QAAyB,GAClC;YAAE,QAAQ;QAAI;IAEtB;AACJ","debugId":null}}]
}
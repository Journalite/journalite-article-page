{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/firebase/clientApp.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, connectAuthEmulator } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Firebase configuration from environment variables\nconst firebaseConfig = {\n    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n    measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\n};\n///\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Analytics only in browser environment\nlet analytics;\nif (typeof window !== 'undefined') {\n    try {\n        analytics = getAnalytics(app);\n    } catch (error) {\n        // Analytics initialization skipped in development\n    }\n}\n\n// Initialize Firebase Authentication\nconst auth = getAuth(app);\n\n// Initialize Firestore\nconst db = getFirestore(app);\n\n// Configure custom auth actions URL\nif (typeof window !== 'undefined') {\n    const actionCodeSettings = {\n        url: `${window.location.origin}/reset-password`,\n        handleCodeInApp: true,\n    };\n\n    // We need to update this in the forgot-password component when sending the reset email\n}\n\n// // Connect to Auth Emulator in development\n// if (process.env.NODE_ENV === 'development') {\n//     // connectAuthEmulator(auth, \"http://localhost:9099\", { disableWarnings: true });\n// }\n\n/////\n\nexport { app, analytics, auth, db };"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;;AACvD;AAAA;AACA;AACA;AAAA;AACA;AAAA;;;;;AACA,4DAA4D;AAC5D,iEAAiE;AAEjE,oDAAoD;AACpD,MAAM,iBAAiB;IACnB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACjB;AACA,GAAG;AAEH,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAE1B,mDAAmD;AACnD,IAAI;AACJ,uCAAmC;;AAMnC;AAEA,qCAAqC;AACrC,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AAErB,uBAAuB;AACvB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AAExB,oCAAoC;AACpC,uCAAmC;;AAM/B,uFAAuF;AAC3F","debugId":null}},
    {"offset": {"line": 181, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/firebase/notifications.ts"],"sourcesContent":["import {\n    collection,\n    addDoc,\n    getDocs,\n    getDoc,\n    doc,\n    query,\n    orderBy,\n    Timestamp,\n    where,\n    updateDoc,\n    deleteDoc,\n    limit\n} from 'firebase/firestore';\nimport { db, auth } from './clientApp';\n\n// Notification interface matching Firestore structure\nexport interface Notification {\n    id?: string;\n    userId: string;\n    type: 'comment' | 'reply' | 'like';\n    read: boolean;\n    sourceId: string; // ID of the article/comment\n    sourceType: 'article' | 'comment';\n    message: string;\n    fromUser: {\n        id: string;\n        name: string;\n    };\n    createdAt: Timestamp;\n    articleSlug?: string; // Optional slug to link directly to the article\n    articleTitle?: string; // Optional article title for context\n}\n\n/**\n * Create a new notification when someone comments on a user's post\n */\nexport async function createCommentNotification(\n    ownerId: string,\n    articleId: string,\n    articleSlug: string,\n    articleTitle: string,\n    commentId: string,\n    commentText: string\n) {\n    try {\n        // Skip if the owner is the commenter (don't notify yourself)\n        const currentUser = auth.currentUser;\n        if (!currentUser || currentUser.uid === ownerId) {\n            return null;\n        }\n\n        // Create notification object\n        const notification: Omit<Notification, 'id'> = {\n            userId: ownerId, // Who will receive the notification\n            type: 'comment',\n            read: false,\n            sourceId: commentId,\n            sourceType: 'comment',\n            message: `${currentUser.displayName || 'Someone'} commented on your article: \"${commentText.substring(0, 50)}${commentText.length > 50 ? '...' : ''}\"`,\n            fromUser: {\n                id: currentUser.uid,\n                name: currentUser.displayName || 'Anonymous'\n            },\n            createdAt: Timestamp.now(),\n            articleSlug,\n            articleTitle\n        };\n\n        // Add to Firestore\n        const docRef = await addDoc(collection(db, 'notifications'), notification);\n\n        return {\n            id: docRef.id,\n            ...notification\n        };\n    } catch (error) {\n        console.error('Error creating notification:', error);\n        return null;\n    }\n}\n\n/**\n * Get all notifications for the current user\n */\nexport async function getUserNotifications(unreadOnly = false) {\n    try {\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error('User not authenticated');\n        }\n\n        // Create base query\n        const notificationsRef = collection(db, 'notifications');\n        let q;\n\n        if (unreadOnly) {\n            // Only fetch unread notifications\n            q = query(\n                notificationsRef,\n                where('userId', '==', currentUser.uid),\n                where('read', '==', false),\n                orderBy('createdAt', 'desc'),\n                limit(100)\n            );\n        } else {\n            // Fetch all notifications\n            q = query(\n                notificationsRef,\n                where('userId', '==', currentUser.uid),\n                orderBy('createdAt', 'desc'),\n                limit(100)\n            );\n        }\n\n        const querySnapshot = await getDocs(q);\n\n        const notifications: Notification[] = [];\n        querySnapshot.forEach((doc) => {\n            notifications.push({\n                id: doc.id,\n                ...doc.data() as Omit<Notification, 'id'>\n            });\n        });\n\n        return notifications;\n    } catch (error) {\n        console.error('Error fetching notifications:', error);\n        throw error;\n    }\n}\n\n/**\n * Mark a notification as read\n */\nexport async function markNotificationAsRead(notificationId: string) {\n    try {\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error('User not authenticated');\n        }\n\n        const notificationRef = doc(db, 'notifications', notificationId);\n        const notificationSnap = await getDoc(notificationRef);\n\n        if (!notificationSnap.exists()) {\n            throw new Error('Notification not found');\n        }\n\n        const notificationData = notificationSnap.data() as Notification;\n\n        // Check if the notification belongs to the current user\n        if (notificationData.userId !== currentUser.uid) {\n            throw new Error('Unauthorized access to notification');\n        }\n\n        // Update the read status\n        await updateDoc(notificationRef, {\n            read: true\n        });\n\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error('Error marking notification as read:', error);\n        throw error;\n    }\n}\n\n/**\n * Mark all notifications as read for the current user\n */\nexport async function markAllNotificationsAsRead() {\n    try {\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error('User not authenticated');\n        }\n\n        const notificationsRef = collection(db, 'notifications');\n        const q = query(\n            notificationsRef,\n            where('userId', '==', currentUser.uid),\n            where('read', '==', false)\n        );\n\n        const querySnapshot = await getDocs(q);\n\n        // Create an array of promises to update each notification\n        const updatePromises = querySnapshot.docs.map(doc =>\n            updateDoc(doc.ref, { read: true })\n        );\n\n        // Execute all updates in parallel\n        await Promise.all(updatePromises);\n\n        return {\n            success: true,\n            count: querySnapshot.size\n        };\n    } catch (error) {\n        console.error('Error marking all notifications as read:', error);\n        throw error;\n    }\n}\n\n/**\n * Delete a notification\n */\nexport async function deleteNotification(notificationId: string) {\n    try {\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            throw new Error('User not authenticated');\n        }\n\n        const notificationRef = doc(db, 'notifications', notificationId);\n        const notificationSnap = await getDoc(notificationRef);\n\n        if (!notificationSnap.exists()) {\n            throw new Error('Notification not found');\n        }\n\n        const notificationData = notificationSnap.data() as Notification;\n\n        // Check if the notification belongs to the current user\n        if (notificationData.userId !== currentUser.uid) {\n            throw new Error('Unauthorized access to notification');\n        }\n\n        // Delete the notification\n        await deleteDoc(notificationRef);\n\n        return {\n            success: true\n        };\n    } catch (error) {\n        console.error('Error deleting notification:', error);\n        throw error;\n    }\n}\n\n/**\n * Get the count of unread notifications\n */\nexport async function getUnreadNotificationsCount() {\n    try {\n        const currentUser = auth.currentUser;\n        if (!currentUser) {\n            return 0;\n        }\n\n        const notificationsRef = collection(db, 'notifications');\n        const q = query(\n            notificationsRef,\n            where('userId', '==', currentUser.uid),\n            where('read', '==', false)\n        );\n\n        const querySnapshot = await getDocs(q);\n        return querySnapshot.size;\n    } catch (error) {\n        console.error('Error counting unread notifications:', error);\n        return 0;\n    }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/firebase/articles.ts"],"sourcesContent":["import { collection, addDoc, getDocs, getDoc, doc, query, orderBy, Timestamp, where, DocumentData, DocumentSnapshot, deleteDoc, updateDoc, arrayUnion, arrayRemove } from 'firebase/firestore';\nimport { db, auth } from './clientApp';\nimport { createCommentNotification } from './notifications';\n\n// Article interface matching our Firestore structure\nexport interface Article {\n    id?: string;\n    title: string;\n    body: string;\n    createdAt: Timestamp;\n    authorId: string;\n    authorName: string;\n    tags: string[];\n    coverImage?: string;\n    slug?: string;\n    status?: 'published' | 'drafts';\n}\n\n// Comment interfaces for Firestore\nexport interface ArticleComment {\n    id?: string;\n    commentId?: string;\n    userId: string;\n    userName: string;\n    content: string;\n    createdAt: Timestamp;\n    likes: string[];\n    replies: CommentReply[];\n}\n\nexport interface CommentReply {\n    replyId: string;\n    userId: string;\n    userName: string;\n    content: string;\n    createdAt: Timestamp;\n    likes: string[];\n}\n\n// Get all articles from Firestore, ordered by createdAt desc\nexport async function getArticles(includeDrafts = false) {\n    try {\n        const articlesRef = collection(db, 'articles');\n        let q;\n\n        if (includeDrafts) {\n            // Return all articles regardless of status\n            q = query(articlesRef, orderBy('createdAt', 'desc'));\n        } else {\n            // Only return published articles\n            q = query(\n                articlesRef,\n                orderBy('createdAt', 'desc')\n            );\n        }\n\n        const querySnapshot = await getDocs(q);\n\n        const articles: Article[] = [];\n        querySnapshot.forEach((doc) => {\n            const articleData = doc.data() as Omit<Article, 'id'>;\n\n            // Include documents where status is 'published' or not set at all\n            if (!includeDrafts && articleData.status === 'drafts') {\n                return;\n            }\n\n            // Include articles with status='published' or no status field\n            if (!includeDrafts && articleData.status !== undefined && articleData.status !== 'published') {\n                return;\n            }\n\n            articles.push({\n                id: doc.id,\n                ...articleData\n            });\n        });\n\n        return articles;\n    } catch (error) {\n        console.error('Error getting articles:', error);\n        throw error;\n    }\n}\n\n// Get a single article by ID\nexport async function getArticleById(id: string) {\n    try {\n        const docRef = doc(db, 'articles', id);\n        const docSnap = await getDoc(docRef);\n\n        if (docSnap.exists()) {\n            return {\n                id: docSnap.id,\n                ...docSnap.data() as Omit<Article, 'id'>\n            };\n        } else {\n            throw new Error('Article not found');\n        }\n    } catch (error) {\n        console.error('Error getting article:', error);\n        throw error;\n    }\n}\n\n// Get a single article by slug\nexport async function getArticleBySlug(slug: string) {\n    try {\n        const articlesRef = collection(db, 'articles');\n        const q = query(articlesRef, where('slug', '==', slug));\n        const querySnapshot = await getDocs(q);\n\n        if (querySnapshot.empty) {\n            throw new Error('Article not found');\n        }\n\n        const docSnap = querySnapshot.docs[0];\n        return {\n            id: docSnap.id,\n            ...docSnap.data() as Omit<Article, 'id'>\n        };\n    } catch (error) {\n        console.error('Error getting article by slug:', error);\n        throw error;\n    }\n}\n\n// Create a new article\nexport async function createArticle(article: Omit<Article, 'id' | 'createdAt' | 'authorId' | 'authorName'>) {\n    try {\n        const user = auth.currentUser;\n        if (!user) {\n            throw new Error('You must be logged in to create an article');\n        }\n\n        // Create the basic article object with required fields\n        const newArticle: any = {\n            title: article.title,\n            body: article.body,\n            slug: article.slug || article.title\n                .toLowerCase()\n                .replace(/[^\\w\\s]/gi, '')\n                .replace(/\\s+/g, '-'),\n            createdAt: Timestamp.now(),\n            authorId: user.uid,\n            authorName: user.displayName || 'Anonymous',\n            tags: article.tags || [],\n            status: article.status || 'published' // Default to published if not specified\n        };\n\n        // Only add optional fields if they exist and have values\n        if (article.coverImage) {\n            newArticle.coverImage = article.coverImage;\n        }\n\n        const docRef = await addDoc(collection(db, 'articles'), newArticle);\n        return {\n            id: docRef.id,\n            ...newArticle\n        };\n    } catch (error) {\n        console.error('Error creating article:', error);\n        throw error;\n    }\n}\n\n// Update an existing article\nexport async function updateArticle(articleId: string, articleData: Partial<Omit<Article, 'id' | 'createdAt' | 'authorId' | 'authorName'>>) {\n    try {\n        const user = auth.currentUser;\n        if (!user) {\n            throw new Error('You must be logged in to edit an article');\n        }\n\n        // First check if the article exists and belongs to the current user\n        const articleRef = doc(db, 'articles', articleId);\n        const articleSnap = await getDoc(articleRef);\n\n        if (!articleSnap.exists()) {\n            throw new Error('Article not found');\n        }\n\n        const articleData1 = articleSnap.data();\n        if (articleData1.authorId !== user.uid) {\n            throw new Error('You can only edit your own articles');\n        }\n\n        // Create the update object\n        const updateData: any = {};\n\n        // Only include fields that were provided\n        if (articleData.title !== undefined) {\n            updateData.title = articleData.title;\n\n            // If title changed, update slug as well (unless slug is explicitly provided)\n            if (articleData.slug === undefined) {\n                updateData.slug = articleData.title\n                    .toLowerCase()\n                    .replace(/[^\\w\\s]/gi, '')\n                    .replace(/\\s+/g, '-');\n            }\n        }\n\n        if (articleData.body !== undefined) {\n            updateData.body = articleData.body;\n        }\n\n        if (articleData.tags !== undefined) {\n            updateData.tags = articleData.tags;\n        }\n\n        if (articleData.status !== undefined) {\n            updateData.status = articleData.status;\n        }\n\n        if (articleData.coverImage !== undefined) {\n            updateData.coverImage = articleData.coverImage;\n        }\n\n        if (articleData.slug !== undefined) {\n            updateData.slug = articleData.slug;\n        }\n\n        // Update the article\n        await updateDoc(articleRef, updateData);\n\n        // Return the updated article\n        const updatedArticleSnap = await getDoc(articleRef);\n        return {\n            id: updatedArticleSnap.id,\n            ...updatedArticleSnap.data() as Omit<Article, 'id'>\n        };\n    } catch (error) {\n        console.error('Error updating article:', error);\n        throw error;\n    }\n}\n\n// Comments functions\nexport async function getArticleComments(articleId: string) {\n    try {\n        const commentsRef = collection(db, 'articles', articleId, 'comments');\n        const q = query(commentsRef, orderBy('createdAt', 'desc'));\n        const querySnapshot = await getDocs(q);\n\n        const comments: ArticleComment[] = [];\n        querySnapshot.forEach((doc) => {\n            const commentData = doc.data() as Omit<ArticleComment, 'id' | 'commentId'>;\n            comments.push({\n                id: doc.id,\n                commentId: doc.id, // Add commentId for compatibility with existing UI\n                ...commentData,\n                replies: commentData.replies || []\n            });\n        });\n\n        return comments;\n    } catch (error) {\n        console.error('Error getting comments:', error);\n        throw error;\n    }\n}\n\nexport async function addComment(articleId: string, content: string) {\n    try {\n        const user = auth.currentUser;\n        if (!user) {\n            throw new Error('You must be logged in to comment');\n        }\n\n        const newComment = {\n            userId: user.uid,\n            userName: user.displayName || user.email?.split('@')[0] || 'Anonymous',\n            content,\n            createdAt: Timestamp.now(),\n            likes: [],\n            replies: []\n        };\n\n        const docRef = await addDoc(collection(db, 'articles', articleId, 'comments'), newComment);\n\n        // Get article information for the notification\n        const articleRef = doc(db, 'articles', articleId);\n        const articleSnap = await getDoc(articleRef);\n\n        if (articleSnap.exists()) {\n            const articleData = articleSnap.data();\n            // Trigger notification to the article owner\n            await createCommentNotification(\n                articleData.authorId,\n                articleId,\n                articleData.slug || '',\n                articleData.title || 'Article',\n                docRef.id,\n                content\n            );\n        }\n\n        return {\n            id: docRef.id,\n            commentId: docRef.id, // Add commentId for compatibility\n            ...newComment\n        };\n    } catch (error) {\n        console.error('Error adding comment:', error);\n        throw error;\n    }\n}\n\nexport async function addReply(articleId: string, commentId: string, content: string) {\n    try {\n        const user = auth.currentUser;\n        if (!user) {\n            throw new Error('You must be logged in to reply');\n        }\n\n        const commentRef = doc(db, 'articles', articleId, 'comments', commentId);\n        const commentSnap = await getDoc(commentRef);\n\n        if (!commentSnap.exists()) {\n            throw new Error('Comment not found');\n        }\n\n        const newReply = {\n            replyId: Math.random().toString(36).substring(2, 15), // Generate a unique ID\n            userId: user.uid,\n            userName: user.displayName || user.email?.split('@')[0] || 'Anonymous',\n            content,\n            createdAt: Timestamp.now(),\n            likes: []\n        };\n\n        // Add the reply to the replies array\n        await updateDoc(commentRef, {\n            replies: arrayUnion(newReply)\n        });\n\n        return newReply;\n    } catch (error) {\n        console.error('Error adding reply:', error);\n        throw error;\n    }\n}\n\nexport async function likeComment(articleId: string, commentId: string) {\n    try {\n        const user = auth.currentUser;\n        if (!user) {\n            throw new Error('You must be logged in to like a comment');\n        }\n\n        const commentRef = doc(db, 'articles', articleId, 'comments', commentId);\n        const commentSnap = await getDoc(commentRef);\n\n        if (!commentSnap.exists()) {\n            throw new Error('Comment not found');\n        }\n\n        const commentData = commentSnap.data() as ArticleComment;\n        const userId = user.uid;\n\n        // Check if the user already liked the comment\n        const likes = commentData.likes || [];\n        const hasLiked = likes.includes(userId);\n\n        if (hasLiked) {\n            // Remove the like\n            await updateDoc(commentRef, {\n                likes: arrayRemove(userId)\n            });\n\n            // Get updated likes\n            const updatedSnap = await getDoc(commentRef);\n            const updatedData = updatedSnap.data() as ArticleComment;\n\n            return {\n                success: true,\n                action: 'unliked',\n                likes: updatedData.likes,\n                count: updatedData.likes.length\n            };\n        } else {\n            // Add the like\n            await updateDoc(commentRef, {\n                likes: arrayUnion(userId)\n            });\n\n            // Get updated likes\n            const updatedSnap = await getDoc(commentRef);\n            const updatedData = updatedSnap.data() as ArticleComment;\n\n            return {\n                success: true,\n                action: 'liked',\n                likes: updatedData.likes,\n                count: updatedData.likes.length\n            };\n        }\n    } catch (error) {\n        console.error('Error liking comment:', error);\n        throw error;\n    }\n}\n\nexport async function deleteComment(articleId: string, commentId: string) {\n    try {\n        const user = auth.currentUser;\n        if (!user) {\n            throw new Error('You must be logged in to delete a comment');\n        }\n\n        const commentRef = doc(db, 'articles', articleId, 'comments', commentId);\n        const commentSnap = await getDoc(commentRef);\n\n        if (!commentSnap.exists()) {\n            throw new Error('Comment not found');\n        }\n\n        const commentData = commentSnap.data() as ArticleComment;\n\n        // Check if the user is the comment author\n        if (commentData.userId !== user.uid) {\n            throw new Error('You can only delete your own comments');\n        }\n\n        await deleteDoc(commentRef);\n\n        return {\n            success: true,\n            message: 'Comment deleted successfully'\n        };\n    } catch (error) {\n        console.error('Error deleting comment:', error);\n        throw error;\n    }\n}\n\n// Delete an article\nexport async function deleteArticle(articleId: string) {\n    try {\n        const user = auth.currentUser;\n        if (!user) {\n            throw new Error('You must be logged in to delete an article');\n        }\n\n        // Get the article to check ownership\n        const articleDoc = await getDoc(doc(db, 'articles', articleId));\n\n        if (!articleDoc.exists()) {\n            throw new Error('Article not found');\n        }\n\n        const articleData = articleDoc.data();\n\n        // Only the author can delete their article\n        if (articleData.authorId !== user.uid) {\n            throw new Error('You can only delete your own articles');\n        }\n\n        // Delete the article\n        await deleteDoc(doc(db, 'articles', articleId));\n\n        return {\n            success: true,\n            message: 'Article deleted successfully'\n        };\n    } catch (error) {\n        console.error('Error deleting article:', error);\n        throw error;\n    }\n} "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 722, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/styles/home.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"active\": \"home-module__i0QXTG__active\",\n  \"article-card\": \"home-module__i0QXTG__article-card\",\n  \"article-container\": \"home-module__i0QXTG__article-container\",\n  \"article-content\": \"home-module__i0QXTG__article-content\",\n  \"article-cover-image\": \"home-module__i0QXTG__article-cover-image\",\n  \"article-excerpt\": \"home-module__i0QXTG__article-excerpt\",\n  \"article-grid\": \"home-module__i0QXTG__article-grid\",\n  \"article-header\": \"home-module__i0QXTG__article-header\",\n  \"article-image\": \"home-module__i0QXTG__article-image\",\n  \"article-meta\": \"home-module__i0QXTG__article-meta\",\n  \"article-page\": \"home-module__i0QXTG__article-page\",\n  \"article-paragraph\": \"home-module__i0QXTG__article-paragraph\",\n  \"article-tag\": \"home-module__i0QXTG__article-tag\",\n  \"article-tags\": \"home-module__i0QXTG__article-tags\",\n  \"article-title\": \"home-module__i0QXTG__article-title\",\n  \"author-avatar\": \"home-module__i0QXTG__author-avatar\",\n  \"author-info\": \"home-module__i0QXTG__author-info\",\n  \"author-name\": \"home-module__i0QXTG__author-name\",\n  \"avatarPlaceholder\": \"home-module__i0QXTG__avatarPlaceholder\",\n  \"backLink\": \"home-module__i0QXTG__backLink\",\n  \"center-column\": \"home-module__i0QXTG__center-column\",\n  \"collapsed\": \"home-module__i0QXTG__collapsed\",\n  \"cover-image\": \"home-module__i0QXTG__cover-image\",\n  \"cta-button\": \"home-module__i0QXTG__cta-button\",\n  \"edit-button\": \"home-module__i0QXTG__edit-button\",\n  \"emptyState\": \"home-module__i0QXTG__emptyState\",\n  \"expanded\": \"home-module__i0QXTG__expanded\",\n  \"feature-desc\": \"home-module__i0QXTG__feature-desc\",\n  \"feature-title\": \"home-module__i0QXTG__feature-title\",\n  \"featured-card\": \"home-module__i0QXTG__featured-card\",\n  \"featured-content\": \"home-module__i0QXTG__featured-content\",\n  \"featured-excerpt\": \"home-module__i0QXTG__featured-excerpt\",\n  \"featured-image\": \"home-module__i0QXTG__featured-image\",\n  \"featured-label\": \"home-module__i0QXTG__featured-label\",\n  \"featured-meta\": \"home-module__i0QXTG__featured-meta\",\n  \"featured-title\": \"home-module__i0QXTG__featured-title\",\n  \"features\": \"home-module__i0QXTG__features\",\n  \"follow-button\": \"home-module__i0QXTG__follow-button\",\n  \"footer\": \"home-module__i0QXTG__footer\",\n  \"header\": \"home-module__i0QXTG__header\",\n  \"hero\": \"home-module__i0QXTG__hero\",\n  \"hero-subtitle\": \"home-module__i0QXTG__hero-subtitle\",\n  \"hero-title\": \"home-module__i0QXTG__hero-title\",\n  \"left-sidebar\": \"home-module__i0QXTG__left-sidebar\",\n  \"loading\": \"home-module__i0QXTG__loading\",\n  \"logo\": \"home-module__i0QXTG__logo\",\n  \"main-grid\": \"home-module__i0QXTG__main-grid\",\n  \"menu-overlay\": \"home-module__i0QXTG__menu-overlay\",\n  \"nav-explore\": \"home-module__i0QXTG__nav-explore\",\n  \"nav-home\": \"home-module__i0QXTG__nav-home\",\n  \"nav-icon\": \"home-module__i0QXTG__nav-icon\",\n  \"nav-learn\": \"home-module__i0QXTG__nav-learn\",\n  \"nav-link\": \"home-module__i0QXTG__nav-link\",\n  \"nav-login\": \"home-module__i0QXTG__nav-login\",\n  \"nav-logout\": \"home-module__i0QXTG__nav-logout\",\n  \"nav-plans\": \"home-module__i0QXTG__nav-plans\",\n  \"nav-profile\": \"home-module__i0QXTG__nav-profile\",\n  \"nav-settings\": \"home-module__i0QXTG__nav-settings\",\n  \"nav-signup\": \"home-module__i0QXTG__nav-signup\",\n  \"nav-text\": \"home-module__i0QXTG__nav-text\",\n  \"nav-thoughts\": \"home-module__i0QXTG__nav-thoughts\",\n  \"profileAvatar\": \"home-module__i0QXTG__profileAvatar\",\n  \"profileBio\": \"home-module__i0QXTG__profileBio\",\n  \"profileContent\": \"home-module__i0QXTG__profileContent\",\n  \"profileHeader\": \"home-module__i0QXTG__profileHeader\",\n  \"profileInfo\": \"home-module__i0QXTG__profileInfo\",\n  \"profileName\": \"home-module__i0QXTG__profileName\",\n  \"profileUsername\": \"home-module__i0QXTG__profileUsername\",\n  \"prompt-banner\": \"home-module__i0QXTG__prompt-banner\",\n  \"prompt-button\": \"home-module__i0QXTG__prompt-button\",\n  \"prompt-icon\": \"home-module__i0QXTG__prompt-icon\",\n  \"prompt-text\": \"home-module__i0QXTG__prompt-text\",\n  \"quote-card\": \"home-module__i0QXTG__quote-card\",\n  \"quote-tag\": \"home-module__i0QXTG__quote-tag\",\n  \"reaction-bar\": \"home-module__i0QXTG__reaction-bar\",\n  \"reaction-button\": \"home-module__i0QXTG__reaction-button\",\n  \"reaction-icon\": \"home-module__i0QXTG__reaction-icon\",\n  \"read-link\": \"home-module__i0QXTG__read-link\",\n  \"right-sidebar\": \"home-module__i0QXTG__right-sidebar\",\n  \"section-title\": \"home-module__i0QXTG__section-title\",\n  \"sectionHeading\": \"home-module__i0QXTG__sectionHeading\",\n  \"sidebar-collapse-button\": \"home-module__i0QXTG__sidebar-collapse-button\",\n  \"sidebar-footer\": \"home-module__i0QXTG__sidebar-footer\",\n  \"sidebar-header\": \"home-module__i0QXTG__sidebar-header\",\n  \"sidebar-heading\": \"home-module__i0QXTG__sidebar-heading\",\n  \"sidebarSection\": \"home-module__i0QXTG__sidebarSection\",\n  \"tag\": \"home-module__i0QXTG__tag\",\n  \"tag-list\": \"home-module__i0QXTG__tag-list\",\n  \"three-column-layout\": \"home-module__i0QXTG__three-column-layout\",\n  \"toggle-button\": \"home-module__i0QXTG__toggle-button\",\n  \"topic-tag\": \"home-module__i0QXTG__topic-tag\",\n  \"topics\": \"home-module__i0QXTG__topics\",\n  \"trending-list\": \"home-module__i0QXTG__trending-list\",\n  \"trending-tag\": \"home-module__i0QXTG__trending-tag\",\n  \"vertical-nav\": \"home-module__i0QXTG__vertical-nav\",\n  \"write-button\": \"home-module__i0QXTG__write-button\",\n  \"writer-avatar\": \"home-module__i0QXTG__writer-avatar\",\n  \"writer-info\": \"home-module__i0QXTG__writer-info\",\n  \"writer-item\": \"home-module__i0QXTG__writer-item\",\n  \"writer-name\": \"home-module__i0QXTG__writer-name\",\n  \"writers\": \"home-module__i0QXTG__writers\",\n});\n"],"names":[],"mappings}},
    {"offset": {"line": 830, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/app/my-thoughts/my-thoughts.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"actions\": \"my-thoughts-module__AMxrYW__actions\",\n  \"active\": \"my-thoughts-module__AMxrYW__active\",\n  \"articleActions\": \"my-thoughts-module__AMxrYW__articleActions\",\n  \"articleCard\": \"my-thoughts-module__AMxrYW__articleCard\",\n  \"articleContent\": \"my-thoughts-module__AMxrYW__articleContent\",\n  \"articleDate\": \"my-thoughts-module__AMxrYW__articleDate\",\n  \"articleExcerpt\": \"my-thoughts-module__AMxrYW__articleExcerpt\",\n  \"articleTag\": \"my-thoughts-module__AMxrYW__articleTag\",\n  \"articleTags\": \"my-thoughts-module__AMxrYW__articleTags\",\n  \"articleTitle\": \"my-thoughts-module__AMxrYW__articleTitle\",\n  \"articlesList\": \"my-thoughts-module__AMxrYW__articlesList\",\n  \"cancelButton\": \"my-thoughts-module__AMxrYW__cancelButton\",\n  \"confirmButton\": \"my-thoughts-module__AMxrYW__confirmButton\",\n  \"createButton\": \"my-thoughts-module__AMxrYW__createButton\",\n  \"deleteButton\": \"my-thoughts-module__AMxrYW__deleteButton\",\n  \"editButton\": \"my-thoughts-module__AMxrYW__editButton\",\n  \"emptyState\": \"my-thoughts-module__AMxrYW__emptyState\",\n  \"emptyStateButton\": \"my-thoughts-module__AMxrYW__emptyStateButton\",\n  \"header\": \"my-thoughts-module__AMxrYW__header\",\n  \"modal\": \"my-thoughts-module__AMxrYW__modal\",\n  \"modalButtons\": \"my-thoughts-module__AMxrYW__modalButtons\",\n  \"modalOverlay\": \"my-thoughts-module__AMxrYW__modalOverlay\",\n  \"modalText\": \"my-thoughts-module__AMxrYW__modalText\",\n  \"modalTitle\": \"my-thoughts-module__AMxrYW__modalTitle\",\n  \"statCard\": \"my-thoughts-module__AMxrYW__statCard\",\n  \"statLabel\": \"my-thoughts-module__AMxrYW__statLabel\",\n  \"statValue\": \"my-thoughts-module__AMxrYW__statValue\",\n  \"statsContainer\": \"my-thoughts-module__AMxrYW__statsContainer\",\n  \"tabButton\": \"my-thoughts-module__AMxrYW__tabButton\",\n  \"tabs\": \"my-thoughts-module__AMxrYW__tabs\",\n  \"title\": \"my-thoughts-module__AMxrYW__title\",\n  \"viewButton\": \"my-thoughts-module__AMxrYW__viewButton\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 869, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/components/NotificationBell.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"bellButton\": \"NotificationBell-module__doceWq__bellButton\",\n  \"bellIcon\": \"NotificationBell-module__doceWq__bellIcon\",\n  \"emptyState\": \"NotificationBell-module__doceWq__emptyState\",\n  \"notificationContainer\": \"NotificationBell-module__doceWq__notificationContainer\",\n  \"notificationContent\": \"NotificationBell-module__doceWq__notificationContent\",\n  \"notificationDropdown\": \"NotificationBell-module__doceWq__notificationDropdown\",\n  \"notificationFooter\": \"NotificationBell-module__doceWq__notificationFooter\",\n  \"notificationHeader\": \"NotificationBell-module__doceWq__notificationHeader\",\n  \"notificationItem\": \"NotificationBell-module__doceWq__notificationItem\",\n  \"notificationList\": \"NotificationBell-module__doceWq__notificationList\",\n  \"notificationMessage\": \"NotificationBell-module__doceWq__notificationMessage\",\n  \"notificationTime\": \"NotificationBell-module__doceWq__notificationTime\",\n  \"seeMoreLink\": \"NotificationBell-module__doceWq__seeMoreLink\",\n  \"unread\": \"NotificationBell-module__doceWq__unread\",\n  \"unreadBadge\": \"NotificationBell-module__doceWq__unreadBadge\",\n  \"unreadDot\": \"NotificationBell-module__doceWq__unreadDot\",\n  \"viewAllLink\": \"NotificationBell-module__doceWq__viewAllLink\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 894, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/components/NotificationBell.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect, useRef } from 'react'\nimport Link from 'next/link'\nimport { getUnreadNotificationsCount, getUserNotifications, markNotificationAsRead, Notification } from '@/firebase/notifications'\nimport styles from './NotificationBell.module.css'\n\nconst NotificationBell = () => {\n  const [unreadCount, setUnreadCount] = useState<number>(0)\n  const [notifications, setNotifications] = useState<Notification[]>([])\n  const [isOpen, setIsOpen] = useState<boolean>(false)\n  const notificationRef = useRef<HTMLDivElement>(null)\n\n  // Fetch unread count on mount and set up interval\n  useEffect(() => {\n    const fetchUnreadCount = async () => {\n      const count = await getUnreadNotificationsCount()\n      setUnreadCount(count)\n    }\n\n    // Fetch immediately\n    fetchUnreadCount()\n\n    // Set up polling every 60 seconds\n    const interval = setInterval(fetchUnreadCount, 60000)\n\n    // Clear interval on unmount\n    return () => clearInterval(interval)\n  }, [])\n\n  // Close dropdown when clicking outside\n  useEffect(() => {\n    const handleClickOutside = (event: MouseEvent) => {\n      if (notificationRef.current && !notificationRef.current.contains(event.target as Node)) {\n        setIsOpen(false)\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside)\n    }\n  }, [])\n\n  // Fetch notifications when dropdown is opened\n  useEffect(() => {\n    if (isOpen) {\n      fetchNotifications()\n    }\n  }, [isOpen])\n\n  const fetchNotifications = async () => {\n    try {\n      const fetchedNotifications = await getUserNotifications(false)\n      setNotifications(fetchedNotifications)\n    } catch (error) {\n      console.error('Error fetching notifications:', error)\n    }\n  }\n\n  const handleToggle = () => {\n    setIsOpen(!isOpen)\n  }\n\n  const handleNotificationClick = async (notification: Notification) => {\n    try {\n      if (!notification.read && notification.id) {\n        await markNotificationAsRead(notification.id)\n        \n        // Update local state\n        setUnreadCount(prev => Math.max(prev - 1, 0))\n        setNotifications(prev => \n          prev.map(n => \n            n.id === notification.id \n              ? { ...n, read: true } \n              : n\n          )\n        )\n      }\n    } catch (error) {\n      console.error('Error marking notification as read:', error)\n    }\n  }\n\n  const formatTime = (timestamp: any) => {\n    if (!timestamp) return ''\n    \n    const date = timestamp.toDate ? timestamp.toDate() : new Date(timestamp)\n    const now = new Date()\n    const diffMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60))\n    \n    if (diffMinutes < 1) return 'Just now'\n    if (diffMinutes < 60) return `${diffMinutes}m ago`\n    \n    const diffHours = Math.floor(diffMinutes / 60)\n    if (diffHours < 24) return `${diffHours}h ago`\n    \n    const diffDays = Math.floor(diffHours / 24)\n    if (diffDays < 7) return `${diffDays}d ago`\n    \n    return date.toLocaleDateString()\n  }\n\n  return (\n    <div className={styles.notificationContainer} ref={notificationRef}>\n      <button className={styles.bellButton} onClick={handleToggle}>\n        <span className={styles.bellIcon}>🔔</span>\n        {unreadCount > 0 && (\n          <span className={styles.unreadBadge}>{unreadCount}</span>\n        )}\n      </button>\n      \n      {isOpen && (\n        <div className={styles.notificationDropdown}>\n          <div className={styles.notificationHeader}>\n            <h3>Notifications</h3>\n            {notifications.length > 0 && (\n              <Link href=\"/notifications\" className={styles.viewAllLink}>\n                View All\n              </Link>\n            )}\n          </div>\n          \n          <div className={styles.notificationList}>\n            {notifications.length === 0 ? (\n              <div className={styles.emptyState}>\n                No notifications yet\n              </div>\n            ) : (\n              notifications.slice(0, 5).map((notification) => (\n                <Link \n                  href={`/articles?slug=${notification.articleSlug}`} \n                  key={notification.id}\n                  className={`${styles.notificationItem} ${!notification.read ? styles.unread : ''}`}\n                  onClick={() => handleNotificationClick(notification)}\n                >\n                  <div className={styles.notificationContent}>\n                    <p className={styles.notificationMessage}>\n                      {notification.message}\n                    </p>\n                    <span className={styles.notificationTime}>\n                      {formatTime(notification.createdAt)}\n                    </span>\n                  </div>\n                  {!notification.read && (\n                    <div className={styles.unreadDot}></div>\n                  )}\n                </Link>\n              ))\n            )}\n          </div>\n          \n          {notifications.length > 5 && (\n            <div className={styles.notificationFooter}>\n              <Link href=\"/notifications\" className={styles.seeMoreLink}>\n                See more notifications\n              </Link>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default NotificationBell "],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1136, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/app/my-thoughts/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport Link from 'next/link'\nimport { useRouter } from 'next/navigation'\nimport { onAuthStateChanged, signOut } from 'firebase/auth'\nimport { collection, query, where, orderBy, getDocs } from 'firebase/firestore'\nimport { auth, db } from '@/firebase/clientApp'\nimport { Article as BaseArticle, deleteArticle } from '@/firebase/articles'\nimport styles from '@/styles/home.module.css'\nimport thoughtStyles from './my-thoughts.module.css'\nimport NotificationBell from '@/components/NotificationBell'\n\n// Extended article interface with status property\ninterface Article extends BaseArticle {\n  status: 'published' | 'drafts';\n}\n\nexport default function MyThoughtsPage() {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [user, setUser] = useState<any>(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [isSidebarCollapsed, setIsSidebarCollapsed] = useState(false)\n  const [windowWidth, setWindowWidth] = useState(0)\n  const [view, setView] = useState<'published' | 'drafts'>('published')\n  const [articles, setArticles] = useState<Article[]>([])\n  const [articleToDelete, setArticleToDelete] = useState<string | null>(null)\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\n  const router = useRouter()\n\n  // Set up window resize listener\n  useEffect(() => {\n    setWindowWidth(window.innerWidth)\n    \n    const handleResize = () => {\n      setWindowWidth(window.innerWidth)\n    }\n    \n    window.addEventListener('resize', handleResize)\n    return () => window.removeEventListener('resize', handleResize)\n  }, [])\n\n  // Use different default sidebar state based on screen size\n  useEffect(() => {\n    setIsSidebarCollapsed(windowWidth < 768)\n  }, [windowWidth])\n\n  // Check authentication status\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, (currentUser) => {\n      const isAuth = !!currentUser\n      setIsAuthenticated(isAuth)\n      setUser(currentUser)\n      \n      if (!isAuth) {\n        // Redirect to login if not authenticated\n        router.push('/login?redirect=/my-thoughts')\n      } else {\n        setIsLoading(false)\n      }\n    })\n    \n    return () => unsubscribe()\n  }, [router])\n\n  // Fetch user's articles\n  useEffect(() => {\n    const fetchArticles = async () => {\n      if (!user) return\n      \n      try {\n        setIsLoading(true)\n        const articlesRef = collection(db, 'articles')\n        \n        let q;\n        if (view === 'published') {\n          // For published view, get articles that either have status=published OR have no status (for backward compatibility)\n          q = query(\n            articlesRef,\n            where('authorId', '==', user.uid),\n            orderBy('createdAt', 'desc')\n          )\n        } else {\n          // For drafts view, only get articles explicitly marked as drafts\n          q = query(\n            articlesRef,\n            where('authorId', '==', user.uid),\n            where('status', '==', 'drafts'),\n            orderBy('createdAt', 'desc')\n          )\n        }\n        \n        const querySnapshot = await getDocs(q)\n        const fetchedArticles: Article[] = []\n        \n        querySnapshot.forEach((doc) => {\n          const articleData = doc.data() as Omit<Article, 'id'>\n          // For published view, only include articles that have status='published' or no status\n          if (view === 'published') {\n            if (!articleData.status || articleData.status === 'published') {\n              fetchedArticles.push({\n                id: doc.id,\n                ...articleData,\n                status: articleData.status || 'published' // Set default status\n              })\n            }\n          } else {\n            // For drafts view, we've already filtered by status in the query\n            fetchedArticles.push({\n              id: doc.id,\n              ...articleData\n            })\n          }\n        })\n        \n        setArticles(fetchedArticles)\n      } catch (error) {\n        console.error('Error fetching articles:', error)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (user && isAuthenticated) {\n      fetchArticles()\n    }\n  }, [user, isAuthenticated, view])\n\n  const toggleSidebar = () => {\n    setIsSidebarCollapsed(!isSidebarCollapsed)\n  }\n\n  const handleLogout = async () => {\n    try {\n      await signOut(auth)\n      router.push('/')\n    } catch (error) {\n      console.error('Error signing out:', error)\n    }\n  }\n\n  const confirmDelete = (articleId: string) => {\n    setArticleToDelete(articleId)\n    setShowDeleteModal(true)\n  }\n\n  const handleDelete = async () => {\n    if (!articleToDelete) return\n    \n    try {\n      // Use the deleteArticle function from the articles service\n      await deleteArticle(articleToDelete)\n      \n      // Update local state to remove the deleted article\n      setArticles(articles.filter(article => article.id !== articleToDelete))\n      setShowDeleteModal(false)\n      setArticleToDelete(null)\n    } catch (error) {\n      console.error('Error deleting article:', error)\n    }\n  }\n\n  const formatDate = (timestamp: any) => {\n    if (!timestamp) return ''\n    \n    let date\n    if (timestamp && typeof timestamp.toDate === 'function') {\n      date = timestamp.toDate()\n    } else {\n      date = new Date(timestamp)\n    }\n    \n    return date.toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    })\n  }\n\n  const getExcerpt = (body: string, maxLength = 150) => {\n    if (!body) return ''\n    if (body.length <= maxLength) return body\n    \n    return body.substring(0, maxLength).trim() + '...'\n  }\n\n  if (isLoading) {\n    return (\n      <div className={styles.container}>\n        <div className={styles.loading}>Loading...</div>\n      </div>\n    )\n  }\n\n  if (!isAuthenticated) {\n    return (\n      <div className={styles.container}>\n        <p>Please log in to view your articles.</p>\n        <Link href=\"/login?redirect=/my-thoughts\" className={styles.loginLink}>\n          Login Now\n        </Link>\n      </div>\n    )\n  }\n\n  return (\n    <div className={styles['three-column-layout']}>\n      {/* LEFT SIDEBAR */}\n      <aside\n        className={`${styles['left-sidebar']} ${\n          isSidebarCollapsed ? styles['collapsed'] : ''\n        }`}\n      >\n        <div className={styles['sidebar-header']}>\n          <div className={styles.logo}>Journalite</div>\n          <button\n            className={styles['toggle-button']}\n            onClick={toggleSidebar}\n            aria-label={\n              isSidebarCollapsed ? 'Expand sidebar' : 'Collapse sidebar'\n            }\n          >\n            {isSidebarCollapsed ? '→' : '←'}\n          </button>\n        </div>\n\n        <nav className={styles['vertical-nav']}>\n          <Link\n            href=\"/\"\n            className={`${styles['nav-link']} ${styles['nav-home']}`}\n          >\n            <span className={styles['nav-icon']}>•</span>\n            <span className={styles['nav-text']}>Home</span>\n          </Link>\n          <Link\n            href=\"/my-thoughts\"\n            className={`${styles['nav-link']} ${styles['nav-thoughts']} ${styles.active}`}\n          >\n            <span className={styles['nav-icon']}>•</span>\n            <span className={styles['nav-text']}>My Thoughts</span>\n          </Link>\n          <Link\n            href=\"/create-article\"\n            className={`${styles['nav-link']} ${styles['nav-create']}`}\n          >\n            <span className={styles['nav-icon']}>•</span>\n            <span className={styles['nav-text']}>Create Article</span>\n          </Link>\n          <Link\n            href=\"/explore\"\n            className={`${styles['nav-link']} ${styles['nav-explore']}`}\n          >\n            <span className={styles['nav-icon']}>•</span>\n            <span className={styles['nav-text']}>Explore</span>\n          </Link>\n          <Link\n            href=\"/my-profile\"\n            className={`${styles['nav-link']} ${styles['nav-profile']}`}\n          >\n            <span className={styles['nav-icon']}>•</span>\n            <span className={styles['nav-text']}>My Profile</span>\n          </Link>\n          <button\n            onClick={handleLogout}\n            className={`${styles['nav-link']} ${styles['nav-logout']}`}\n          >\n            <span className={styles['nav-icon']}>•</span>\n            <span className={styles['nav-text']}>Log out</span>\n          </button>\n        </nav>\n      </aside>\n\n      {/* MAIN CONTENT */}\n      <main className={styles['center-column']}>\n        <div className={thoughtStyles.header}>\n          <h1 className={thoughtStyles.title}>My Thoughts</h1>\n          <div className={thoughtStyles.actions}>\n            <Link href=\"/create-article\" className={thoughtStyles.createButton}>\n              New Article\n            </Link>\n          </div>\n        </div>\n\n        <div className={thoughtStyles.tabs}>\n          <button\n            className={`${thoughtStyles.tabButton} ${\n              view === 'published' ? thoughtStyles.active : ''\n            }`}\n            onClick={() => setView('published')}\n          >\n            Published\n          </button>\n          <button\n            className={`${thoughtStyles.tabButton} ${\n              view === 'drafts' ? thoughtStyles.active : ''\n            }`}\n            onClick={() => setView('drafts')}\n          >\n            Drafts\n          </button>\n        </div>\n\n        {articles.length === 0 ? (\n          <div className={thoughtStyles.emptyState}>\n            <p>You don't have any {view} articles yet.</p>\n            {view === 'published' ? (\n              <p>When you publish your articles, they will appear here.</p>\n            ) : (\n              <p>Save your work as drafts to continue later.</p>\n            )}\n            <Link href=\"/create-article\" className={thoughtStyles.emptyStateButton}>\n              Create Your First Article\n            </Link>\n          </div>\n        ) : (\n          <div className={thoughtStyles.articlesList}>\n            {articles.map((article) => (\n              <div key={article.id} className={thoughtStyles.articleCard}>\n                <div className={thoughtStyles.articleContent}>\n                  <h2 className={thoughtStyles.articleTitle}>\n                    <Link href={`/articles?slug=${article.slug}`}>\n                      {article.title}\n                    </Link>\n                  </h2>\n                  <p className={thoughtStyles.articleDate}>\n                    {formatDate(article.createdAt)}\n                  </p>\n                  <p className={thoughtStyles.articleExcerpt}>\n                    {getExcerpt(article.body)}\n                  </p>\n                  <div className={thoughtStyles.articleTags}>\n                    {article.tags?.map((tag, index) => (\n                      <span key={index} className={thoughtStyles.articleTag}>\n                        {tag}\n                      </span>\n                    ))}\n                  </div>\n                </div>\n                <div className={thoughtStyles.articleActions}>\n                  <Link href={`/articles?slug=${article.slug}`} className={thoughtStyles.viewButton}>\n                    View\n                  </Link>\n                  <Link \n                    href={`/edit-article?id=${article.id}`} \n                    className={thoughtStyles.editButton}\n                  >\n                    Edit\n                  </Link>\n                  <button\n                    className={thoughtStyles.deleteButton}\n                    onClick={() => confirmDelete(article.id || '')}\n                  >\n                    Delete\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </main>\n\n      {/* RIGHT SIDEBAR */}\n      <aside className={styles['right-sidebar']}>\n        <h2 className={styles['sidebar-heading']}>Your Stats</h2>\n        <NotificationBell />\n        <div className={thoughtStyles.statsContainer}>\n          <div className={thoughtStyles.statCard}>\n            <span className={thoughtStyles.statValue}>\n              {articles.filter(a => a.status === 'published').length}\n            </span>\n            <span className={thoughtStyles.statLabel}>Published</span>\n          </div>\n          <div className={thoughtStyles.statCard}>\n            <span className={thoughtStyles.statValue}>\n              {articles.filter(a => a.status === 'drafts').length}\n            </span>\n            <span className={thoughtStyles.statLabel}>Drafts</span>\n          </div>\n        </div>\n        <Link href=\"/create-article\" className={styles['write-button']}>\n          Write\n        </Link>\n      </aside>\n\n      {/* Delete Confirmation Modal */}\n      {showDeleteModal && (\n        <div className={thoughtStyles.modalOverlay}>\n          <div className={thoughtStyles.modal}>\n            <h3 className={thoughtStyles.modalTitle}>Confirm Delete</h3>\n            <p className={thoughtStyles.modalText}>\n              Are you sure you want to delete this article? This action cannot be undone.\n            </p>\n            <div className={thoughtStyles.modalButtons}>\n              <button\n                className={thoughtStyles.cancelButton}\n                onClick={() => {\n                  setShowDeleteModal(false)\n                  setArticleToDelete(null)\n                }}\n              >\n                Cancel\n              </button>\n              <button className={thoughtStyles.confirmButton} onClick={handleDelete}>\n                Delete\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  )\n}"],"names":[],"mappings":"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","debugId":null}}]
}
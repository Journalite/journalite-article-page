{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/components/ConsoleSuppressionScript.tsx"],"sourcesContent":["'use client'\n\nimport { useEffect } from 'react';\n\nexport function ConsoleSuppressionScript() {\n  useEffect(() => {\n    if (process.env.NODE_ENV === 'production') {\n      // Suppress React DevTools message and other development warnings\n      const originalConsoleLog = console.log;\n      const originalConsoleWarn = console.warn;\n      const originalConsoleInfo = console.info;\n\n      console.log = (...args) => {\n        const message = String(args[0] || '');\n        \n        // Suppress common development messages\n        if (\n          message.includes('Download the React DevTools') ||\n          message.includes('react-dom-client.development.js') ||\n          message.includes('Fast Refresh') ||\n          message.includes('HMR') ||\n          message.includes('[turbopack]')\n        ) {\n          return;\n        }\n        \n        originalConsoleLog.apply(console, args);\n      };\n\n      console.warn = (...args) => {\n        const message = String(args[0] || '');\n        \n        // Suppress development warnings\n        if (\n          message.includes('DevTools') ||\n          message.includes('development') ||\n          message.includes('[turbopack]')\n        ) {\n          return;\n        }\n        \n        originalConsoleWarn.apply(console, args);\n      };\n\n      console.info = (...args) => {\n        const message = String(args[0] || '');\n        \n        // Suppress development info messages\n        if (\n          message.includes('DevTools') ||\n          message.includes('[turbopack]')\n        ) {\n          return;\n        }\n        \n        originalConsoleInfo.apply(console, args);\n      };\n    }\n  }, []);\n\n  return null; // This component doesn't render anything\n} "],"names":[],"mappings":";;;AAEA;AAFA;;AAIO,SAAS;IACd,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,uCAA2C;;QAmD3C;IACF,GAAG,EAAE;IAEL,OAAO,MAAM,yCAAyC;AACxD","debugId":null}},
    {"offset": {"line": 35, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/context/ThemeContext.tsx"],"sourcesContent":["'use client'\n\nimport React, { createContext, useContext, useEffect, useState } from 'react'\n\ntype Theme = 'light' | 'dark'\n\ninterface ThemeContextType {\n  theme: Theme\n  toggleTheme: () => void\n  setTheme: (theme: Theme) => void\n}\n\nconst ThemeContext = createContext<ThemeContextType | undefined>(undefined)\n\nexport function ThemeProvider({ children }: { children: React.ReactNode }) {\n  const [theme, setTheme] = useState<Theme>('light')\n  const [mounted, setMounted] = useState(false)\n\n  useEffect(() => {\n    // Check for saved theme preference or default to 'light'\n    const savedTheme = localStorage.getItem('theme') as Theme\n    const systemTheme = window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light'\n    const initialTheme = savedTheme || systemTheme\n    \n    setTheme(initialTheme)\n    setMounted(true)\n  }, [])\n\n  useEffect(() => {\n    if (mounted) {\n      // Update localStorage\n      localStorage.setItem('theme', theme)\n      \n      // Update document class\n      document.documentElement.classList.remove('light', 'dark')\n      document.documentElement.classList.add(theme)\n      \n      // Update meta theme-color for mobile browsers\n      const metaThemeColor = document.querySelector('meta[name=\"theme-color\"]')\n      if (metaThemeColor) {\n        metaThemeColor.setAttribute('content', theme === 'dark' ? '#0f172a' : '#ffffff')\n      }\n    }\n  }, [theme, mounted])\n\n  const toggleTheme = () => {\n    setTheme(prev => prev === 'light' ? 'dark' : 'light')\n  }\n\n  // Provide context even when not mounted to prevent errors\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme, setTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  )\n}\n\nexport function useTheme() {\n  const context = useContext(ThemeContext)\n  if (context === undefined) {\n    throw new Error('useTheme must be used within a ThemeProvider')\n  }\n  return context\n} "],"names":[],"mappings":";;;;;AAEA;AAFA;;;AAYA,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAAgC;AAE1D,SAAS,cAAc,EAAE,QAAQ,EAAiC;IACvE,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS;IAC1C,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEvC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,yDAAyD;QACzD,MAAM,aAAa,aAAa,OAAO,CAAC;QACxC,MAAM,cAAc,OAAO,UAAU,CAAC,gCAAgC,OAAO,GAAG,SAAS;QACzF,MAAM,eAAe,cAAc;QAEnC,SAAS;QACT,WAAW;IACb,GAAG,EAAE;IAEL,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,SAAS;YACX,sBAAsB;YACtB,aAAa,OAAO,CAAC,SAAS;YAE9B,wBAAwB;YACxB,SAAS,eAAe,CAAC,SAAS,CAAC,MAAM,CAAC,SAAS;YACnD,SAAS,eAAe,CAAC,SAAS,CAAC,GAAG,CAAC;YAEvC,8CAA8C;YAC9C,MAAM,iBAAiB,SAAS,aAAa,CAAC;YAC9C,IAAI,gBAAgB;gBAClB,eAAe,YAAY,CAAC,WAAW,UAAU,SAAS,YAAY;YACxE;QACF;IACF,GAAG;QAAC;QAAO;KAAQ;IAEnB,MAAM,cAAc;QAClB,SAAS,CAAA,OAAQ,SAAS,UAAU,SAAS;IAC/C;IAEA,0DAA0D;IAC1D,qBACE,8OAAC,aAAa,QAAQ;QAAC,OAAO;YAAE;YAAO;YAAa;QAAS;kBAC1D;;;;;;AAGP;AAEO,SAAS;IACd,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}}]
}
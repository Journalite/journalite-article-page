{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 127, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/firebase/clientApp.ts"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, connectAuthEmulator } from \"firebase/auth\";\nimport { getFirestore } from \"firebase/firestore\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Firebase configuration from environment variables\nconst firebaseConfig = {\n    apiKey: process.env.NEXT_PUBLIC_FIREBASE_API_KEY,\n    authDomain: process.env.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN,\n    projectId: process.env.NEXT_PUBLIC_FIREBASE_PROJECT_ID,\n    storageBucket: process.env.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET,\n    messagingSenderId: process.env.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID,\n    appId: process.env.NEXT_PUBLIC_FIREBASE_APP_ID,\n    measurementId: process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID\n};\n///\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\n\n// Initialize Analytics only in browser environment\nlet analytics;\nif (typeof window !== 'undefined') {\n    try {\n        analytics = getAnalytics(app);\n    } catch (error) {\n        // Analytics initialization skipped in development\n    }\n}\n\n// Initialize Firebase Authentication\nconst auth = getAuth(app);\n\n// Initialize Firestore\nconst db = getFirestore(app);\n\n// Configure custom auth actions URL\nif (typeof window !== 'undefined') {\n    const actionCodeSettings = {\n        url: `${window.location.origin}/reset-password`,\n        handleCodeInApp: true,\n    };\n\n    // We need to update this in the forgot-password component when sending the reset email\n}\n\n// // Connect to Auth Emulator in development\n// if (process.env.NODE_ENV === 'development') {\n//     // connectAuthEmulator(auth, \"http://localhost:9099\", { disableWarnings: true });\n// }\n\n/////\n\nexport { app, analytics, auth, db };"],"names":[],"mappings":"AAAA,uDAAuD;;;;;;;AACvD;AAAA;AACA;AACA;AAAA;AACA;AAAA;;;;;AACA,4DAA4D;AAC5D,iEAAiE;AAEjE,oDAAoD;AACpD,MAAM,iBAAiB;IACnB,MAAM;IACN,UAAU;IACV,SAAS;IACT,aAAa;IACb,iBAAiB;IACjB,KAAK;IACL,aAAa;AACjB;AACA,GAAG;AAEH,sBAAsB;AACtB,MAAM,MAAM,CAAA,GAAA,oLAAA,CAAA,gBAAa,AAAD,EAAE;AAE1B,mDAAmD;AACnD,IAAI;AACJ,uCAAmC;;AAMnC;AAEA,qCAAqC;AACrC,MAAM,OAAO,CAAA,GAAA,6MAAA,CAAA,UAAO,AAAD,EAAE;AAErB,uBAAuB;AACvB,MAAM,KAAK,CAAA,GAAA,iKAAA,CAAA,eAAY,AAAD,EAAE;AAExB,oCAAoC;AACpC,uCAAmC;;AAM/B,uFAAuF;AAC3F","debugId":null}},
    {"offset": {"line": 180, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/styles/messages.module.css [app-ssr] (css module)"],"sourcesContent":["__turbopack_context__.v({\n  \"avatar\": \"messages-module__rpXMyq__avatar\",\n  \"avatarContainer\": \"messages-module__rpXMyq__avatarContainer\",\n  \"avatarPlaceholder\": \"messages-module__rpXMyq__avatarPlaceholder\",\n  \"container\": \"messages-module__rpXMyq__container\",\n  \"conversationDetails\": \"messages-module__rpXMyq__conversationDetails\",\n  \"conversationHeader\": \"messages-module__rpXMyq__conversationHeader\",\n  \"conversationItem\": \"messages-module__rpXMyq__conversationItem\",\n  \"conversationName\": \"messages-module__rpXMyq__conversationName\",\n  \"conversationPreview\": \"messages-module__rpXMyq__conversationPreview\",\n  \"conversationTime\": \"messages-module__rpXMyq__conversationTime\",\n  \"conversationsList\": \"messages-module__rpXMyq__conversationsList\",\n  \"emptyActionButton\": \"messages-module__rpXMyq__emptyActionButton\",\n  \"emptyState\": \"messages-module__rpXMyq__emptyState\",\n  \"loadingContainer\": \"messages-module__rpXMyq__loadingContainer\",\n  \"loadingSpinner\": \"messages-module__rpXMyq__loadingSpinner\",\n  \"messagesHeader\": \"messages-module__rpXMyq__messagesHeader\",\n  \"newConversationButton\": \"messages-module__rpXMyq__newConversationButton\",\n  \"sentMessagePrefix\": \"messages-module__rpXMyq__sentMessagePrefix\",\n  \"spin\": \"messages-module__rpXMyq__spin\",\n  \"unreadBadge\": \"messages-module__rpXMyq__unreadBadge\",\n  \"unreadConversation\": \"messages-module__rpXMyq__unreadConversation\",\n  \"unreadName\": \"messages-module__rpXMyq__unreadName\",\n  \"unreadPreview\": \"messages-module__rpXMyq__unreadPreview\",\n});\n"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"}},
    {"offset": {"line": 211, "column": 0}, "map": {"version":3,"sources":["file:///Users/sirabdisalam/journalite-article-page/src/app/messages/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useEffect } from 'react';\nimport { useRouter } from 'next/navigation';\nimport { collection, query, where, orderBy, onSnapshot, doc, getDoc, DocumentData, Timestamp } from 'firebase/firestore';\nimport { db, auth } from '@/firebase/clientApp';\nimport { onAuthStateChanged } from 'firebase/auth';\nimport { format, isToday, isYesterday } from 'date-fns';\nimport Link from 'next/link';\nimport styles from '@/styles/messages.module.css';\n\ninterface Conversation {\n  id: string;\n  members: string[];\n  memberNames?: Record<string, string>;\n  memberPhotos?: Record<string, string>;\n  lastMessage: string;\n  updatedAt: Timestamp;\n  unreadCount?: number;\n  lastMessageSenderId?: string; // Track who sent the last message\n}\n\nexport default function MessagesPage() {\n  const [conversations, setConversations] = useState<Conversation[]>([]);\n  const [loading, setLoading] = useState(true);\n  const [currentUser, setCurrentUser] = useState<any>(null);\n  const router = useRouter();\n\n  // Listen to auth state changes\n  useEffect(() => {\n    const unsubscribe = onAuthStateChanged(auth, async (user) => {\n      if (!user) {\n        // Redirect to login if not authenticated\n        router.push('/login?redirect=/messages');\n        return;\n      }\n      \n      setCurrentUser(user);\n    });\n\n    return () => unsubscribe();\n  }, [router]);\n\n  // Fetch conversations when user is authenticated\n  useEffect(() => {\n    if (!currentUser) return;\n    \n    // Create query for conversations where the current user is a member\n    const conversationsRef = collection(db, 'conversations');\n    const q = query(\n      conversationsRef,\n      where('members', 'array-contains', currentUser.uid),\n      orderBy('updatedAt', 'desc')\n    );\n    \n    // Set up real-time listener\n    const unsubscribe = onSnapshot(q, async (snapshot) => {\n      const conversationsData: Conversation[] = [];\n      \n      const userDetailsPromises = [];\n      \n      for (const docSnapshot of snapshot.docs) {\n        const data = docSnapshot.data() as Conversation;\n        \n        // Get other member details\n        const memberNames: Record<string, string> = {};\n        const memberPhotos: Record<string, string> = {};\n        \n        // Get user details for each member\n        for (const memberId of data.members) {\n          if (memberId !== currentUser.uid) {\n            // Store the promise for later resolution\n            userDetailsPromises.push(\n              getDoc(doc(db, 'users', memberId))\n                .then(userSnapshot => {\n                  if (userSnapshot.exists()) {\n                    const userData = userSnapshot.data() as { name?: string; photoURL?: string };\n                    memberNames[memberId] = userData.name || 'Unknown User';\n                    memberPhotos[memberId] = userData.photoURL || '';\n                  } else {\n                    memberNames[memberId] = 'Unknown User';\n                  }\n                })\n                .catch(error => {\n                  console.error('Error fetching user details:', error);\n                  memberNames[memberId] = 'Unknown User';\n                })\n            );\n          }\n        }\n        \n        // Add conversation with member details\n        conversationsData.push({\n          id: docSnapshot.id,\n          members: data.members,\n          lastMessage: data.lastMessage,\n          updatedAt: data.updatedAt,\n          unreadCount: data.unreadCount || 0,\n          lastMessageSenderId: data.lastMessageSenderId,\n          memberNames,\n          memberPhotos\n        });\n      }\n      \n      // Wait for all user detail promises to resolve\n      await Promise.all(userDetailsPromises);\n      \n      setConversations(conversationsData);\n      setLoading(false);\n    }, error => {\n      console.error(\"Error fetching conversations:\", error);\n      setLoading(false);\n    });\n    \n    return () => unsubscribe();\n  }, [currentUser]);\n\n  // Get the other member's name from the conversation\n  const getOtherMemberName = (conversation: Conversation): string => {\n    if (!currentUser || !conversation.memberNames) return 'Loading...';\n    \n    const otherMemberId = conversation.members.find(id => id !== currentUser.uid);\n    return otherMemberId && conversation.memberNames[otherMemberId] \n      ? conversation.memberNames[otherMemberId] \n      : 'Unknown User';\n  };\n  \n  // Get the other member's photo from the conversation\n  const getOtherMemberPhoto = (conversation: Conversation): string => {\n    if (!currentUser || !conversation.memberPhotos) return '';\n    \n    const otherMemberId = conversation.members.find(id => id !== currentUser.uid);\n    return otherMemberId && conversation.memberPhotos[otherMemberId] \n      ? conversation.memberPhotos[otherMemberId] \n      : '';\n  };\n  \n  // Format the timestamp with smart display\n  const formatTimestamp = (timestamp: Timestamp): string => {\n    if (!timestamp) return '';\n    \n    try {\n      const date = timestamp.toDate();\n      \n      // If today, show time only\n      if (isToday(date)) {\n        return format(date, 'h:mm a');\n      }\n      \n      // If yesterday, show \"Yesterday\"\n      if (isYesterday(date)) {\n        return 'Yesterday';\n      }\n      \n      // Otherwise show date\n      return format(date, 'MMM d');\n    } catch (error) {\n      return '';\n    }\n  };\n  \n  // Get user initials for avatar\n  const getInitials = (name: string): string => {\n    if (!name) return '';\n    \n    return name\n      .split(' ')\n      .map(part => part.charAt(0))\n      .join('')\n      .toUpperCase()\n      .substring(0, 2);\n  };\n  \n  // Check if message is unread for current user\n  const isUnreadMessage = (conversation: Conversation): boolean => {\n    return Boolean(\n      conversation.unreadCount && \n      conversation.unreadCount > 0 && \n      conversation.lastMessageSenderId !== currentUser?.uid\n    );\n  };\n\n  // Truncate message preview to reasonable length\n  const truncateMessage = (message: string): string => {\n    return message.length > 50 ? `${message.substring(0, 50)}...` : message;\n  };\n\n  if (loading) {\n    return (\n      <div className={styles.loadingContainer}>\n        <div className={styles.loadingSpinner}></div>\n        <p>Loading conversations...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className={styles.container}>\n      <div className={styles.messagesHeader}>\n        <h1>Messages</h1>\n        <button \n          className={styles.newConversationButton}\n          onClick={() => router.push('/messages/new')}\n        >\n          New Message\n        </button>\n      </div>\n      \n      <div className={styles.conversationsList}>\n        {conversations.length === 0 ? (\n          <div className={styles.emptyState}>\n            <p>You don't have any conversations yet.</p>\n            <p>Visit an author's profile to start a conversation.</p>\n          </div>\n        ) : (\n          conversations.map((conversation) => (\n            <Link \n              href={`/messages/${conversation.id}`}\n              key={conversation.id} \n              className={`${styles.conversationItem} ${isUnreadMessage(conversation) ? styles.unreadConversation : ''}`}\n            >\n              <div className={styles.avatarContainer}>\n                {getOtherMemberPhoto(conversation) ? (\n                  <img \n                    src={getOtherMemberPhoto(conversation)} \n                    alt={getOtherMemberName(conversation)} \n                    className={styles.avatar}\n                  />\n                ) : (\n                  <div \n                    className={styles.avatarPlaceholder}\n                    style={{ \n                      background: `hsl(${getOtherMemberName(conversation).charCodeAt(0) * 10 % 360}, 70%, 65%)` \n                    }}\n                  >\n                    {getInitials(getOtherMemberName(conversation))}\n                  </div>\n                )}\n                {isUnreadMessage(conversation) && (\n                  <span className={styles.unreadBadge}>\n                    {conversation.unreadCount! > 9 ? '9+' : conversation.unreadCount}\n                  </span>\n                )}\n              </div>\n              \n              <div className={styles.conversationDetails}>\n                <div className={styles.conversationHeader}>\n                  <h3 className={`${styles.conversationName} ${isUnreadMessage(conversation) ? styles.unreadName : ''}`}>\n                    {getOtherMemberName(conversation)}\n                  </h3>\n                  <span className={styles.conversationTime}>\n                    {formatTimestamp(conversation.updatedAt)}\n                  </span>\n                </div>\n                <p className={`${styles.conversationPreview} ${isUnreadMessage(conversation) ? styles.unreadPreview : ''}`}>\n                  {conversation.lastMessageSenderId === currentUser?.uid && (\n                    <span className={styles.sentMessagePrefix}>You: </span>\n                  )}\n                  {truncateMessage(conversation.lastMessage)}\n                </p>\n              </div>\n            </Link>\n          ))\n        )}\n      </div>\n    </div>\n  );\n} "],"names":[],"mappings":"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","debugId":null}}]
}